{"version":3,"sources":["mmdvmServer.index.ts"],"names":[],"mappings":"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","file":"mmdvmServer.index.js","sourcesContent":["\r\n/// <reference path=\"viewmodels.generated.d.ts\" />\r\n\r\n\r\nmodule MMDash {\r\n    export class MMDVMServerModule {\r\n        private strServerSearchText = Coalesce.Utilities.GetUrlParameter(\"server\");\r\n        public server = new ViewModels.Server();\r\n        public noDataOffline = ko.observable(false);\r\n        public noDataOnline = ko.observable(false);\r\n        private servers = new ListViewModels.ServerList();\r\n        public onlineUsers = new ListViewModels.LogEntryList();\r\n        public offlineUsers = new ListViewModels.LogEntryList();\r\n        public isLoadingOnline = ko.observable(true);\r\n        public isLoadingOffline = ko.observable(true);\r\n        public isLoadingServer = ko.observable(true);\r\n\r\n        load(callback?: (self: this) => void) {\r\n            var self = this;\r\n            self.servers.dataSource = new self.servers.dataSources.ServersWithoutChildren();\r\n            self.servers.filter = {\r\n                serverSearchString: self.strServerSearchText\r\n            }\r\n            self.servers.load(function () {\r\n                if (self.servers.items().length > 0) {\r\n                    var id = self.servers.items()[0].serverId()\r\n                    self.server.dataSource = new self.server.dataSources.ServersWithoutChildren();\r\n                    self.server.load(id, function () {\r\n                        self.isLoadingServer(false);\r\n                    });\r\n                    self.onlineUsers.filter = {\r\n                        serverId: id.toString()\r\n                    }\r\n                    self.onlineUsers.dataSource = new self.onlineUsers.dataSources.OnlineLogs();\r\n                    self.onlineUsers.pageSize(50);\r\n                    self.onlineUsers.load(function () {\r\n                        self.isLoadingOnline(false);\r\n                        if (self.onlineUsers.count() == 0) {\r\n                            self.noDataOnline(true);\r\n                        }\r\n                    });\r\n\r\n                    self.offlineUsers.filter = {\r\n                        serverId: id.toString()\r\n                    }\r\n                    self.offlineUsers.dataSource = new self.offlineUsers.dataSources.OfflineLogs();\r\n                    self.offlineUsers.pageSize(50);\r\n                    self.offlineUsers.load(function () {\r\n                        self.isLoadingOffline(false);\r\n                        if (self.offlineUsers.count() == 0) {\r\n                            self.noDataOffline(true);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n        constructor() {\r\n            var self = this;\r\n        }\r\n\r\n    }\r\n\r\n    $(function () {\r\n        var vm = new MMDVMServerModule();\r\n        ko.applyBindings(vm);\r\n        vm.load();\r\n    })\r\n\r\n}"]}
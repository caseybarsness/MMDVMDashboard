{"version":3,"sources":["Scripts/Coalesce/coalesce.utilities.ts","Scripts/Coalesce/coalesce.ko.base.ts","Scripts/Coalesce/coalesce.ko.utilities.ts","Scripts/Coalesce/coalesce.ko.bindings.ts","Scripts/Generated/Ko.ApplicationUser.g.ts","Scripts/Generated/Ko.ApplicationUserList.g.ts","Scripts/Generated/Ko.CallSign.g.ts","Scripts/Generated/Ko.CallSignList.g.ts","Scripts/Generated/Ko.LogEntry.g.ts","Scripts/Generated/Ko.LogEntryList.g.ts","Scripts/Generated/Ko.Server.g.ts","Scripts/Generated/Ko.ServerList.g.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["/// <reference path=\"../coalesce.dependencies.d.ts\" />\r\n// Coalesce.Utilities\r\n\r\n// Turn off AJAX Caching\r\n$.ajaxSetup({ cache: false });\r\n\r\nmodule Coalesce {\r\n    // Create a sub namespace.\r\n    export module Utilities {\r\n        var busyOverlayTimeout = 0;\r\n        var busyDepth = 0;\r\n        var _isBusyEnabled = true;\r\n\r\n        export function getClassName(object: any) {\r\n            if (typeof object !== 'object') return null;\r\n            var funcNameRegex = /function (.{1,})\\(/;\r\n            var results = (funcNameRegex).exec(object.constructor.toString());\r\n            return (results && results.length > 1) ? results[1] : \"\";\r\n        };\r\n\r\n        // Turn on or off the busy indicator as a whole\r\n        export function isBusyEnabled(value: boolean) {\r\n            if (!value) {\r\n                clearTimeout(busyOverlayTimeout);\r\n                busyOverlayTimeout = 0;\r\n                $('#busy-overlay').fadeOut(100);\r\n            }\r\n            _isBusyEnabled = value;\r\n        };\r\n\r\n        export function hideBusy() {\r\n            if (_isBusyEnabled) {\r\n                busyDepth--;\r\n                if (busyDepth === 0) {\r\n                    clearTimeout(busyOverlayTimeout);\r\n                    busyOverlayTimeout = 0;\r\n                    $('#busy-overlay').fadeOut(100);\r\n                }\r\n            }\r\n        };\r\n\r\n        export function showBusy() {\r\n            // Wait for 200 MS before showing the busy indicator.\r\n            if (_isBusyEnabled) {\r\n                busyDepth++;\r\n                if (busyOverlayTimeout === 0) {\r\n                    busyOverlayTimeout = setTimeout(showBusyNow, 200);\r\n                }\r\n            }\r\n        };\r\n\r\n        function showBusyNow() {\r\n            $('#busy-overlay').fadeIn(100);\r\n            //clearTimeout(busyOverlayFailureTimeout);\r\n            //busyOverlayFailureTimeout = setTimeout(busyFailed, busyOverlayFailureTimeoutInSeconds * 1000);\r\n        }\r\n\r\n        // Load a Web API JSON object as a script. This returns the object that the URL returns.\r\n        // It runs synchronously.\r\n        export function loadAsScript(url: string): string {\r\n            var result;\r\n            $.ajax(url, {\r\n                type: \"GET\",\r\n                async: false\r\n            }).done(function (data) {\r\n                result = data;\r\n            });\r\n            return result;\r\n        };\r\n\r\n        // Get a URL parameter by name.\r\n        export function GetUrlParameter(sParam: string): string {\r\n            var sPageUrl = window.location.search.substring(1);\r\n            var sUrlVariables = sPageUrl.split('&');\r\n            for (var i = 0; i < sUrlVariables.length; i++) {\r\n                var sParameterName = sUrlVariables[i].split('=');\r\n                if (sParameterName[0] == sParam) {\r\n                    return decodeURIComponent(sParameterName[1]);\r\n                }\r\n            }\r\n            if (sParam === \"id\" || sParam === \"Id\" || sParam === \"ID\") {\r\n                // The id was used as the last part of the actual URL.\r\n                var paths = window.location.pathname.split('/');\r\n                var lastPath = paths[paths.length - 1];\r\n                if ($.isNumeric(lastPath)) {\r\n                    return decodeURIComponent(lastPath);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        export function SetUrlParameter(url: string, paramName: string, paramValue: string) {\r\n            paramValue = encodeURIComponent(paramValue);\r\n            var hash = location.hash;\r\n            url = url.replace(hash, '');\r\n            if (url.indexOf(paramName + \"=\") >= 0) {\r\n                var prefix = url.substring(0, url.indexOf(paramName));\r\n                var suffix = url.substring(url.indexOf(paramName));\r\n                suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\r\n                suffix = (suffix.indexOf(\"&\") >= 0) ? suffix.substring(suffix.indexOf(\"&\")) : \"\";\r\n                url = prefix + paramName + \"=\" + paramValue + suffix;\r\n            }\r\n            else {\r\n                if (url.indexOf(\"?\") < 0)\r\n                    url += \"?\" + paramName + \"=\" + paramValue;\r\n                else\r\n                    url += \"&\" + paramName + \"=\" + paramValue;\r\n            }\r\n            return url + hash;\r\n        }\r\n\r\n        export function capitalizeFirstLetter(string: string) {\r\n            if (string) return string.charAt(0).toUpperCase() + string.slice(1);\r\n            else return string;\r\n        }\r\n\r\n        export function lowerFirstLetter(string: string) {\r\n            if (string) return string.charAt(0).toLowerCase() + string.slice(1);\r\n            else return string;\r\n        }\r\n\r\n        export function warning(question: string, callback: (() => void), myThis: any): (() => void) {\r\n            return function () {\r\n                if (confirm(question)) {\r\n                    callback.bind(myThis || this)();\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        // Saves the values of inputs into the DOM element.\r\n        // This is used to serialize the DOM for storage with the values.\r\n        export function saveValuesInDom() {\r\n            $('input:text').each(function (i, item) {\r\n                $(item).attr('value', $(item).val() as string);\r\n            });\r\n\r\n            $('textarea').each(function (i, item) {\r\n                $(item).html($(item).val() as string);\r\n            });\r\n\r\n            $('input:checkbox').each(function (i, item) {\r\n                if ((<HTMLInputElement>item).checked) {\r\n                    $(item).attr('checked', 'checked');\r\n                } else {\r\n                    $(item).removeAttr('checked');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    export module ModalHelpers {\r\n        export function setupPlainModal(content: string): void {\r\n            content = '\\\r\n                <div id=\"modal-dialog\" class=\"modal fade\">\\\r\n                  <div class=\"modal-dialog\">\\\r\n                    <div class=\"modal-content\">' +\r\n            content + '\\\r\n                    </div><!-- /.modal-content -->\\\r\n                  </div><!-- /.modal-dialog -->\\\r\n                </div><!-- /.modal -->\\\r\n            ';\r\n\r\n            // Remove the old one.\r\n            $('#modal-dialog').remove();\r\n            // Add this to the DOM\r\n            $('body').append(content);\r\n        }\r\n\r\n        export function setupModal(title: string, content: string, hideSave: boolean, hideClose: boolean): void {\r\n            content = '\\\r\n                <div class=\"modal-header\">\\\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\\\r\n                  <h3 class=\"modal-title\">' +\r\n            title + '\\\r\n                  </h3>\\\r\n                </div>\\\r\n                <div class=\"modal-body\">' +\r\n            content + '\\\r\n                </div>\\\r\n                <div class=\"modal-footer\">' +\r\n            (hideClose ? '' : '\\\r\n                  <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\\\r\n                    ') +\r\n            (hideSave ? '' : '\\\r\n                  <button type=\"button\" class=\"btn btn-primary\">Save</button>\\\r\n                    ') + '\\\r\n                </div>\\\r\n            ';\r\n\r\n            setupPlainModal(content);\r\n        }\r\n    }\r\n}\r\n\r\n","/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\nclass EnumValue {\n    id: number;\n    value: string;\n}\n\nmodule Coalesce {\n    interface ComputedConfiguration<T> extends KnockoutComputed<T> {\n        raw: () => T\n    };\n\n    class CoalesceConfiguration<T> {\n        protected parentConfig: CoalesceConfiguration<any>;\n\n        constructor(parentConfig?: CoalesceConfiguration<any>) {\n            this.parentConfig = parentConfig;\n        }\n\n        protected prop = function <TProp>(name: string): ComputedConfiguration<TProp> {\n            const k = \"_\" + name;\n            const raw = this[k] = ko.observable<TProp>(null);\n            var computed: ComputedConfiguration<TProp>;\n            computed = ko.computed<TProp>({\n                deferEvaluation: true, // This is essential. If not deferred, the observable will be immediately evaluated without parentConfig being set.\n                read: () => {\n                    var rawValue = raw();\n                    if (rawValue !== null) return rawValue;\n\n                    if (this.parentConfig && this.parentConfig[name as string]) {\n                        return this.parentConfig[name as string]();\n                    }\n\n                    return null;\n                },\n                write: raw\n            }) as any as ComputedConfiguration<TProp>;\n            computed.raw = raw;\n            return computed;\n        }\n\n        /** The relative url where the API may be found. */\n        public baseApiUrl = this.prop<string>(\"baseApiUrl\");\n        /** The relative url where the generated views may be found. */\n        public baseViewUrl = this.prop<string>(\"baseViewUrl\");\n        /** Whether or not the callback specified for onFailure will be called or not. */\n        public showFailureAlerts = this.prop<boolean>(\"showFailureAlerts\");\n\n        /** A callback to be called when a failure response is received from the server. */\n        public onFailure = this.prop<(object: T, message: string) => void>(\"onFailure\");\n        /** A callback to be called when an AJAX request begins. */\n        public onStartBusy = this.prop<(object: T) => void>(\"onStartBusy\");\n        /** A callback to be called when an AJAX request completes. */\n        public onFinishBusy = this.prop<(object: T) => void>(\"onFinishBusy\");\n\n        /**\n            Gets the underlying observable that stores the object's explicit configuration value.\n        */\n        public raw = (name: keyof this): KnockoutObservable<any> | undefined => {\n            return (this as any)[\"_\" + name];\n        }\n    }\n\n    export class ViewModelConfiguration<T extends BaseViewModel> extends CoalesceConfiguration<T> {\n        /** Time to wait after a change is seen before auto-saving (if autoSaveEnabled is true). Acts as a debouncing timer for multiple simultaneous changes. */\n        public saveTimeoutMs = this.prop<number>(\"saveTimeoutMs\");\n\n        /** Determines whether changes to a model will be automatically saved after saveTimeoutMs milliseconds have elapsed. */\n        public autoSaveEnabled = this.prop<boolean>(\"autoSaveEnabled\");\n\n        /** Determines whether or not changes to many-to-many collection properties will automatically trigger a save call to the server or not. */\n        public autoSaveCollectionsEnabled = this.prop<boolean>(\"autoSaveCollectionsEnabled\");\n\n        /** Whether to invoke onStartBusy and onFinishBusy during saves. */\n        public showBusyWhenSaving = this.prop<boolean>(\"showBusyWhenSaving\");\n\n        /** Whether or not to reload the ViewModel with the state of the object received from the server after a call to .save(). */\n        public loadResponseFromSaves = this.prop<boolean>(\"loadResponseFromSaves\");\n\n        /**\n            Whether or not to validate the model after loading it from a DTO from the server.\n            Disabling this can improve performance in some cases.\n        */\n        public validateOnLoadFromDto = this.prop<boolean>(\"validateOnLoadFromDto\");\n\n        /**\n            Whether or not validation on a ViewModel should be setup in its constructor,\n            or if validation must be set up manually by calling viewModel.setupValidation().\n            Turning this off can improve performance in read-only scenarios.\n        */\n        public setupValidationAutomatically = this.prop<boolean>(\"setupValidationAutomatically\");\n\n        /**\n            An optional callback to be called when an object is loaded from a response from the server.\n            Callback will be called after all properties on the ViewModel have been set from the server response.\n        */\n        public onLoadFromDto = this.prop<(object: T) => void>(\"onLoadFromDto\");\n\n        /**\n            The dataSource (either an instance or a type) that will be used as the initial\n            dataSource when a new object of this type is created.\n            Not valid for global configuration; recommended to be used on class-level configuration.\n            E.g. ViewModels.MyModel.coalesceConfig.initialDataSource(MyModel.dataSources.MyDataSource);\n        */\n        public initialDataSource = this.prop<DataSource<T> | (new () => DataSource<T>)>(\"initialDataSource\");\n    }\n\n    export class ListViewModelConfiguration<T extends BaseListViewModel<TItem>, TItem extends BaseViewModel> extends CoalesceConfiguration<T> {\n    }\n\n    export class ServiceClientConfiguration<T extends ServiceClient> extends CoalesceConfiguration<T> {\n    }\n\n    class RootConfig extends CoalesceConfiguration<any> {\n        public readonly viewModel = new ViewModelConfiguration<BaseViewModel>(this);\n        public readonly listViewModel = new ListViewModelConfiguration<BaseListViewModel<BaseViewModel>, BaseViewModel>(this);\n        public readonly serviceClient = new ServiceClientConfiguration<ServiceClient>(this);\n    }\n\n    const invalidPropFunc: () => any = function () { if (arguments.length) throw \"property is not valid at this level\"; return null; };\n    const invalidProp: any = invalidPropFunc;\n    invalidProp.raw = invalidProp;\n\n    export const GlobalConfiguration = new RootConfig();\n    GlobalConfiguration.baseApiUrl(\"/api\");\n    GlobalConfiguration.baseViewUrl(\"\");\n    GlobalConfiguration.showFailureAlerts(true);\n    GlobalConfiguration.onFailure((obj, message) => alert(message));\n    GlobalConfiguration.onStartBusy(obj => Coalesce.Utilities.showBusy());\n    GlobalConfiguration.onFinishBusy(obj => Coalesce.Utilities.hideBusy());\n\n    GlobalConfiguration.viewModel.saveTimeoutMs(500);\n    GlobalConfiguration.viewModel.autoSaveEnabled(true);\n    GlobalConfiguration.viewModel.autoSaveCollectionsEnabled(true);\n    GlobalConfiguration.viewModel.showBusyWhenSaving(false);\n    GlobalConfiguration.viewModel.loadResponseFromSaves(true);\n    GlobalConfiguration.viewModel.validateOnLoadFromDto(true);\n    GlobalConfiguration.viewModel.setupValidationAutomatically(true);\n    GlobalConfiguration.viewModel.initialDataSource = invalidProp;\n\n    ko.validation.init({\n        grouping: {\n            deep: false,\n            live: true,\n            observable: true\n        }\n    });\n\n    export interface LoadableViewModel {\n        loadFromDto: (data: object) => void;\n        parent: object;\n        parentCollection: object;\n    }\n\n    export interface ClientMethodParent {\n        coalesceConfig: CoalesceConfiguration<this>;\n        apiController: string;\n    }\n\n    export abstract class ClientMethod<TParent extends ClientMethodParent, TResult> {\n        public abstract readonly name: string;\n\n        /** HTTP method to be used when calling the API endpoint. */\n        public readonly verb: string = \"POST\";\n\n        /** Result of method strongly typed in a observable. */\n        public result: KnockoutObservable<TResult> = ko.observable<TResult>(null);\n\n        /** Raw result object of method simply wrapped in an observable. */\n        public rawResult: KnockoutObservable<any> = ko.observable(null);\n\n        /** True while the method is being called */\n        public isLoading: KnockoutObservable<boolean> = ko.observable<boolean>(false);\n\n        /** Error response when method has failed. */\n        public message: KnockoutObservable<string> = ko.observable<string>(null);\n\n        /** True if last invocation of method was successful. */\n        public wasSuccessful: KnockoutObservable<boolean | null> = ko.observable(null);\n\n        constructor (protected parent: TParent) { }\n\n        protected abstract loadResponse: (data: object, callback?: (result: TResult) => void, reload?: boolean) => void;\n\n        protected invokeWithData(postData: object, callback?: (result: TResult) => void, reload?: boolean) {\n            this.isLoading(true);\n            this.message('');\n            this.wasSuccessful(null);\n            return $.ajax({\n                method: this.verb,\n                url: this.parent.coalesceConfig.baseApiUrl() + this.parent.apiController + '/' + this.name,\n                data: postData,\n                xhrFields: { withCredentials: true }\n            })\n                .done((data) => {\n\n                    // This is here because it was migrated from the old client method calls.\n                    // Whether or not this should be done remains to be see, but it was kept to reduce\n                    // the number of breaking changes being made.\n                    if (this.parent instanceof BaseViewModel)\n                        this.parent.isDirty(false);\n\n                    this.rawResult(data.object);\n                    this.message('');\n                    this.wasSuccessful(true);\n\n                    this.loadResponse(data.object, callback, reload);\n                })\n                .fail((xhr) => {\n                    var errorMsg = \"Unknown Error\";\n                    if (xhr.responseJSON && xhr.responseJSON.message) errorMsg = xhr.responseJSON.message;\n                    this.wasSuccessful(false);\n                    this.message(errorMsg);\n\n                    if (this.parent.coalesceConfig.showFailureAlerts()) {\n                        this.parent.coalesceConfig.onFailure()(this.parent, `Could not call method ${this.name}: ${errorMsg}`);\n                    }\n                })\n                .always(() => {\n                    this.isLoading(false);\n                });\n        }\n    }\n\n    export abstract class DataSource<T extends BaseViewModel> {\n        protected _name: string;\n\n        public saveToDto: () => { [x: string]: string } = () => { return {}; }\n\n        // This is computed so we can subscribe to when the request to the server changes,\n        // and then reload objects/lists accordingly.\n        public getQueryString = ko.computed(() => {\n            var query = `dataSource=${this._name}`;\n\n            //&${$.param({ dataSource: this.saveToDto() }).replace(/dataSource%5B(.*?)%5D/g, 'dataSource.$1')}\n\n            var dto = this.saveToDto();\n            for (var key in dto) {\n                if (dto[key] !== null && dto[key] !== undefined) {\n                    query += `&dataSource.${key}=${encodeURIComponent(dto[key])}`\n                }\n            }\n            return query;\n        }, null, { deferEvaluation: true });\n\n        /**\n            Subscribe the given list to changes in the data source's parameters,\n            triggering a reload upon changed parameter values.\n        */\n        public subscribe = (list: BaseListViewModel<T>) => {\n            this.getQueryString.subscribe(() => {\n                if (list.isLoaded()) {\n                    list.delayedLoad(300);\n                }\n            })\n        }\n\n        constructor() {\n            this._name = Coalesce.Utilities.getClassName(this);\n        }\n    }\n\n    export abstract class ServiceClient {\n        public readonly abstract apiController: string;\n    }\n\n    export abstract class BaseViewModel {\n\n        protected readonly abstract modelName: string;\n        protected readonly abstract modelDisplayName: string;\n\n        // Typing this property as keyof this prevents us from using BaseViewModel amorphously.\n        // It prevents assignment of an arbitrary derived type to a variable/parameter expecting BaseViewModel\n        // because primaryKeyName on a derived type is wider than it is on BaseViewModel.\n        protected readonly abstract primaryKeyName: string;\n\n        public readonly abstract apiController: string;\n        protected readonly abstract viewController: string;\n\n        /**\n            List of all possible data sources that can be set on the dataSource property.\n        */\n        public abstract dataSources: any;\n\n        /**\n            The custom data source that will be invoked on the server to provide the data for this list.\n        */\n        public dataSource: DataSource<this>;\n\n        /**\n            Properties which determine how this object behaves.\n        */\n        public coalesceConfig: ViewModelConfiguration<this> = null;\n\n        /** Stack for number of times loading has been called. */\n        protected loadingCount: number = 0;\n        /** Stores the return value of setInterval for automatic save delays. */\n        protected saveTimeout: number = 0;\n\n\n        /** Callbacks to call after a save. */\n        protected saveCallbacks: Array<(self: this) => void> = [];\n\n        /**\n            String that will be passed to the server when loading and saving that allows for data trimming via C# Attributes.\n        */\n        public includes: string = \"\";\n\n        /**\n            If true, the busy indicator is shown when loading.\n            @deprecated Use coalesceConfig.showBusyWhenSaving instead.\n        */\n        get showBusyWhenSaving() { return this.coalesceConfig.showBusyWhenSaving() }\n        set showBusyWhenSaving(value) { this.coalesceConfig.showBusyWhenSaving(value) }\n\n        /**\n            Whether or not alerts should be shown when loading fails.\n            @deprecated Use coalesceConfig.showFailureAlerts instead.\n        */\n        get showFailureAlerts() { return this.coalesceConfig.showFailureAlerts() }\n        set showFailureAlerts(value) { this.coalesceConfig.showFailureAlerts(value) }\n\n        /** Parent of this object, if this object was loaded as part of a hierarchy. */\n        public parent: BaseViewModel | BaseListViewModel<this> = null;\n        /** Parent of this object, if this object was loaded as part of list of objects. */\n        public parentCollection: KnockoutObservableArray<this> = null;\n        /**\n            Primary Key of the object.\n            @deprecated Use the strongly-typed property of the key for this model whenever possible. This property will be removed once Coalesce supports composite keys.\n        */\n        public myId: any = 0;\n\n        /** Dirty Flag. Set when a value on the model changes. Reset when the model is saved or reloaded. */\n        public isDirty: KnockoutObservable<boolean> = ko.observable(false);\n        /** Contains the error message from the last failed call to the server. */\n        public errorMessage: KnockoutObservable<string> = ko.observable(null);\n\n        /**\n            If this is true, all changes will be saved automatically.\n            @deprecated Use coalesceConfig.autoSaveEnabled instead.\n        */\n        get isSavingAutomatically() { return this.coalesceConfig.autoSaveEnabled() }\n        set isSavingAutomatically(value) { this.coalesceConfig.autoSaveEnabled(value) }\n\n\n        /** Flag to use to determine if this item is shown. Provided for convenience. */\n        public isVisible: KnockoutObservable<boolean> = ko.observable(false);\n        /** Flag to use to determine if this item is expanded. Provided for convenience. */\n        public isExpanded: KnockoutObservable<boolean> = ko.observable(false);\n        /** Flag to use to determine if this item is selected. Provided for convenience. */\n        public isSelected: KnockoutObservable<boolean> = ko.observable(false);\n        /** Flag to use to determine if this item is checked. Provided for convenience. */\n        public isChecked: KnockoutObservable<boolean> = ko.observable(false);\n        /** Flag to use to determine if this item is being edited. Provided for convenience. */\n        public isEditing: KnockoutObservable<boolean> = ko.observable(false);\n\n        /** Toggles the isExpanded flag. Use with a click binding for a button. */\n        public toggleIsExpanded = (): void => this.isExpanded(!this.isExpanded());\n\n        /** Toggles the isEditing flag. Use with a click binding for a button. */\n        public toggleIsEditing = (): void => this.isEditing(!this.isEditing());\n\n        /** Toggles the isSelected flag. Use with a click binding for a button. */\n        public toggleIsSelected = (): void => this.isSelected(!this.isSelected());\n\n        /**\n            Sets isSelected(true) on this object and clears on the rest of the items in the parent collection.\n            @returns true to bubble additional click events.\n        */\n        public selectSingle = (): boolean => {\n            if (this.parentCollection()) {\n                $.each(this.parentCollection(), (i, obj) => {\n                    obj.isSelected(false);\n                });\n            }\n            this.isSelected(true);\n            return true; // Allow other click events\n        };\n\n\n        /** List of errors found during validation. Any errors present will prevent saving. */\n        public errors: KnockoutValidationErrors = null;\n        /** List of warnings found during validation. Saving is still allowed with warnings present. */\n        public warnings: KnockoutValidationErrors = null;\n\n        /** True if the object is currently saving. */\n        public isSaving: KnockoutObservable<boolean> = ko.observable(false);\n        /** Internal count of child objects that are saving. */\n        protected savingChildCount: KnockoutObservable<number> = ko.observable(0);\n\n        /** \n            Returns true if there are no client-side validation issues.\n            Saves will be prevented if this returns false.\n        */\n        public isValid = (): boolean => this.errors == null || this.errors().length == 0;\n\n        /**\n            Triggers any validation messages to be shown, and returns a bool that indicates if there are any validation errors.\n        */\n        public validate = (): boolean => {\n            if (this.errors) {\n                this.errors.showAllMessages();\n                this.warnings.showAllMessages();\n            }\n            return this.isValid();\n        };\n\n        /** Setup knockout validation on this ViewModel. This is done automatically unless disabled with setupValidationAutomatically(false) */\n        public setupValidation: () => void;\n\n        /** True if the object is loading. */\n        public isLoading: KnockoutObservable<boolean> = ko.observable(false);\n        /**  True once the data has been loaded. */\n        public isLoaded: KnockoutObservable<boolean> = ko.observable(false);\n        /** URL to a stock editor for this object. */\n        public editUrl: KnockoutComputed<string>;\n\n\n        /**\n          * Loads this object from a data transfer object received from the server.\n          * @param force - Will override the check against isLoading that is done to prevent recursion.\n          * @param allowCollectionDeletes - Set true when entire collections are loaded. True is the default.\n                In some cases only a partial collection is returned, set to false to only add/update collections.\n        */\n        public abstract loadFromDto: (data: any, force?: boolean, allowCollectionDeletes?: boolean) => void;\n\n        /** Saves this object into a data transfer object to send to the server. */\n        public abstract saveToDto: () => any;\n\n        /**\n            Loads any child objects that have an ID set, but not the full object.\n            This is useful when creating an object that has a parent object and the ID is set on the new child.\n        */\n        public abstract loadChildren: (callback?: () => void) => void;\n\n\n        /** Returns true if the current object, or any of its children, are saving. */\n        public isThisOrChildSaving: KnockoutComputed<boolean> = ko.computed(() => {\n            if (this.isSaving()) return true;\n            if (this.savingChildCount() > 0) return true;\n            return false;\n        });\n\n        // Handle children that are saving.\n        // Internally used member to count the number of saving children.\n        protected onSavingChildChange = (isSaving: boolean): void => {\n            if (isSaving)\n                this.savingChildCount(this.savingChildCount() + 1);\n            else\n                this.savingChildCount(this.savingChildCount() - 1);\n\n            if (this.parent instanceof BaseViewModel) {\n                this.parent.onSavingChildChange(isSaving);\n            }\n        };\n\n        /**\n            Saves the object to the server and then calls a callback.\n            Returns false if there are validation errors.\n        */\n        public save = (callback?: (self: this) => void): JQueryPromise<any> | boolean | undefined => {\n            if (!this.isLoading()) {\n                if (this.validate()) {\n                    if (this.coalesceConfig.showBusyWhenSaving()) this.coalesceConfig.onStartBusy()(this);\n                    this.isSaving(true);\n\n                    var url = `${this.coalesceConfig.baseApiUrl()}${this.apiController}/Save?includes=${this.includes}&${this.dataSource.getQueryString()}`\n\n                    return $.ajax({ method: \"POST\", url: url, data: this.saveToDto(), xhrFields: { withCredentials: true } })\n                        .done((data) => {\n                            this.isDirty(false);\n                            this.errorMessage(null);\n                            if (this.coalesceConfig.loadResponseFromSaves()) {\n                                this.loadFromDto(data.object, true);\n                            }\n                            // The object is now saved. Call any callback.\n                            for (var i in this.saveCallbacks) {\n                                this.saveCallbacks[i](this);\n                            }\n                        })\n                        .fail((xhr: JQueryXHR) => {\n                            var errorMsg = \"Unknown Error\";\n                            if (xhr.responseJSON && xhr.responseJSON.message) errorMsg = xhr.responseJSON.message;\n                            this.errorMessage(errorMsg);\n\n                            // If an object was returned, load that object.\n                            if (xhr.responseJSON && xhr.responseJSON.object) {\n                                this.loadFromDto(xhr.responseJSON.object, true);\n                            }\n                            if (this.coalesceConfig.showFailureAlerts())\n                                this.coalesceConfig.onFailure()(this, \"Could not save the item: \" + errorMsg);\n                        })\n                        .always(() => {\n                            this.isSaving(false);\n                            if (typeof(callback) == \"function\") {\n                                callback(this);\n                            }\n                            if (this.coalesceConfig.showBusyWhenSaving()) this.coalesceConfig.onFinishBusy()(this);\n                        });\n                }\n                else {\n                    // If validation fails, we still want to try and load any child objects which may have just been set.\n                    // Normally, we get these from the result of the save.\n                    this.loadChildren();\n                    return false;\n                }\n            }\n        }\n\n\n        /** Loads the object from the server based on the id specified. If no id is specified, the current id is used if one is set. */\n        public load = (id?: any, callback?: (self: this) => void): JQueryPromise<any> | undefined => {\n            if (!id) {\n                id = this[this.primaryKeyName as keyof this]();\n            }\n            if (id) {\n                this.isLoading(true);\n                this.coalesceConfig.onStartBusy()(this);\n\n                var url = `${this.coalesceConfig.baseApiUrl()}${this.apiController}/Get/${id}?includes=${this.includes}&${this.dataSource.getQueryString()}`\n                \n                return $.ajax({ method: \"GET\", url: url, xhrFields: { withCredentials: true } })\n                    .done((data) => {\n                        this.errorMessage(null);\n                        this.loadFromDto(data.object, true);\n                        this.isLoaded(true);\n                        if (typeof(callback) == \"function\") callback(this);\n                    })\n                    .fail((xhr: JQueryXHR) => {\n                        this.isLoaded(false);\n\n                        var errorMsg = \"Could not load \" + this.modelName + \" with ID = \" + id;\n                        if (xhr.responseJSON && xhr.responseJSON.message) errorMsg = xhr.responseJSON.message;\n\n                        this.errorMessage(errorMsg);\n                        if (this.coalesceConfig.showFailureAlerts())\n                            this.coalesceConfig.onFailure()(this, errorMsg);\n                    })\n                    .always(() => {\n                        this.coalesceConfig.onFinishBusy()(this);\n                        this.isLoading(false);\n                    });\n            }\n        };\n\n        /** Deletes the object without any prompt for confirmation. */\n        public deleteItem = (callback?: (self: this) => void): JQueryPromise<any> | undefined => {\n            var currentId = this[this.primaryKeyName as keyof this]();\n            if (currentId) {\n                return $.ajax({ method: \"POST\", url: this.coalesceConfig.baseApiUrl() + this.apiController + \"/Delete/\" + currentId, xhrFields: { withCredentials: true } })\n                    .done((data) => {\n                        this.errorMessage(null);\n\n                        // Remove it from the parent collection\n                        if (this.parentCollection && this.parent) {\n                            this.parent.isLoading(true);\n                            this.parentCollection.splice(this.parentCollection().indexOf(this), 1);\n                            this.parent.isLoading(false);\n                        }\n                    })\n                    .fail((xhr: JQueryXHR) => {\n                        var errorMsg = \"Could not delete the item\";\n                        if (xhr.responseJSON && xhr.responseJSON.message) errorMsg = xhr.responseJSON.message;\n\n                        this.errorMessage(errorMsg);\n                        if (this.coalesceConfig.showFailureAlerts())\n                            this.coalesceConfig.onFailure()(this, errorMsg);\n                    })\n                    .always(() => {\n                        if (typeof(callback) == \"function\") {\n                            callback(this);\n                        }\n                    });\n            } else {\n                // No ID has been assigned yet, just remove it.\n                if (this.parentCollection && this.parent) {\n                    this.parent.isLoading(true);\n                    this.parentCollection.splice(this.parentCollection().indexOf(this), 1);\n                    this.parent.isLoading(false);\n                }\n                if (typeof(callback) == \"function\") {\n                    callback(this);\n                }\n            }\n        };\n\n        /**\n            Deletes the object if a prompt for confirmation is answered affirmatively.\n        */\n        public deleteItemWithConfirmation = (callback?: () => void, message?: string): JQueryPromise<any> | undefined => {\n            if (typeof message != 'string') {\n                message = \"Delete this item?\";\n            }\n            if (confirm(message)) {\n                return this.deleteItem(callback);\n            }\n        };\n\n        /** Saves a many-to-many collection change. This is done automatically and doesn't need to be called. */\n        protected saveCollection = <TJoin extends BaseViewModel>(\n            operation: 'added' | 'deleted',\n            existingItems: KnockoutObservableArray<TJoin>,\n            constructor: new () => TJoin,\n            localIdProp: keyof TJoin,\n            foreignIdProp: keyof TJoin,\n            foreignId: any\n        ): JQueryPromise<any> | boolean | undefined => {\n\n            var currentId = this[this.primaryKeyName as keyof this]();\n\n            if (operation == 'added') {\n                var newItem = new constructor();\n                newItem.parent = this;\n                newItem.parentCollection = existingItems;\n                newItem.coalesceConfig.autoSaveEnabled(false);\n                newItem[localIdProp](currentId);\n                newItem[foreignIdProp](foreignId);\n                return newItem.save(() => {\n                    // Restore default autosave behavior.\n                    newItem.coalesceConfig.autoSaveEnabled(null);\n                    existingItems.push(newItem);\n                });\n            } else if (operation == 'deleted') {\n                var matchedItems = existingItems().filter(i => i[localIdProp]() === currentId && i[foreignIdProp]() === foreignId);\n                if (matchedItems.length == 0) {\n                    throw `Couldn't find a ${constructor.toString()} object to delete with ${localIdProp}=${currentId} & ${foreignIdProp}=${foreignId}.`\n                } else {\n                    // If we matched more than one item, we're just going to operate on the first one.\n                    var matcheditem = matchedItems[0];\n                    return matcheditem.deleteItem();\n                }\n            }\n        };\n\n        /** Saves a many to many collection if coalesceConfig.autoSaveCollectionsEnabled is true. */\n        protected autoSaveCollection = <TJoin extends BaseViewModel>(\n            operation: string,\n            existingItems: KnockoutObservableArray<TJoin>,\n            constructor: new () => TJoin,\n            localIdProp: keyof TJoin,\n            foreignIdProp: keyof TJoin,\n            foreignId: any\n        ) => {\n            if (!this.isLoading() && this.coalesceConfig.autoSaveCollectionsEnabled()) {\n\n                // TODO: Eventually Batch saves for many-to-many collections.\n                if (operation != 'added' && operation != 'deleted') return;\n\n                this.saveCollection<TJoin>(operation, existingItems, constructor, localIdProp, foreignIdProp, foreignId);\n            }\n        };\n\n\n        /**\n            Register a callback to be called when a save is done.\n            @returns true if the callback was registered. false if the callback was already registered. \n        */\n        public onSave = (callback: (self: this) => void): boolean => {\n            if (typeof(callback) == \"function\" && !this.saveCallbacks.filter(c => c == callback).length) {\n                this.saveCallbacks.push(callback);\n                return true;\n            }\n            return false;\n        };\n\n        /** Saves the object is coalesceConfig.autoSaveEnabled is true. */\n        public autoSave = (): void => {\n            if (!this.isLoading()) {\n                this.isDirty(true);\n                if (this.coalesceConfig.autoSaveEnabled()) {\n                    // Batch saves.\n                    if (this.saveTimeout) clearTimeout(this.saveTimeout);\n                    this.saveTimeout = setTimeout(() => {\n                        this.saveTimeout = 0;\n                        // If we have a save in progress, wait...\n                        if (this.isSaving()) {\n                            this.autoSave();\n                        } else if (this.coalesceConfig.autoSaveEnabled()) {\n                            this.save();\n                        }\n                    }, this.coalesceConfig.saveTimeoutMs());\n                }\n            }\n        }\n\n        /**\n            Displays an editor for the object in a modal dialog.\n        */\n        public showEditor = (callback?: any): JQueryPromise<any> => {\n            // Close any existing modal\n            $('#modal-dialog').modal('hide');\n            // Get new modal content\n            this.coalesceConfig.onStartBusy()(this);\n            return $.ajax({\n                method: \"GET\",\n                url: this.coalesceConfig.baseViewUrl() + this.viewController + '/EditorHtml',\n                data: { simple: true },\n                xhrFields: { withCredentials: true }\n            })\n                .done((data) => {\n                    // Add to DOM\n                    Coalesce.ModalHelpers.setupModal('Edit ' + this.modelDisplayName, data, true, false);\n                    // Data bind\n                    var lastValue = this.coalesceConfig.autoSaveEnabled.raw();\n                    this.coalesceConfig.autoSaveEnabled(false);\n                    ko.applyBindings(this, document.getElementById(\"modal-dialog\"));\n                    this.coalesceConfig.autoSaveEnabled(lastValue);\n                    // Show the dialog\n                    $('#modal-dialog').modal('show');\n                    // Make the callback when the form closes.\n                    $(\"#modal-dialog\").on(\"hidden.bs.modal\", () => {\n                        if (typeof(callback) == \"function\") callback(this);\n                    });\n                })\n                .always(() => {\n                    this.coalesceConfig.onFinishBusy()(this);\n                });\n        }\n\n        /**\n            Common base-class level initialization that depends on all constructors being ran\n            (and therefore cannot be performed directly in the base constructor).\n        */\n        protected baseInitialize = () => {\n\n            var dataSource = this.coalesceConfig.initialDataSource.peek();\n            if (dataSource === null) {\n                this.dataSource = new this.dataSources.Default()\n            } else {\n                if (dataSource instanceof Coalesce.DataSource) {\n                    this.dataSource = dataSource\n                } else {\n                    this.dataSource = new dataSource();\n                }\n            }\n\n            if (this.coalesceConfig.setupValidationAutomatically.peek()) {\n                this.setupValidation();\n            }\n        }\n\n        constructor(parent: Coalesce.BaseViewModel | Coalesce.BaseListViewModel<any>) {\n            this.parent = parent;\n\n            // Handles setting the parent savingChildChange\n            this.isSaving.subscribe((newValue: boolean) => {\n                if (this.parent instanceof BaseViewModel) {\n                    this.parent.onSavingChildChange(newValue);\n                }\n            })\n        }\n    }\n\n    export abstract class BaseListViewModel<TItem extends BaseViewModel> {\n\n        public readonly abstract modelName: string;\n        public readonly abstract apiController: string;\n\n        /**\n            List of all possible data sources that can be set on the dataSource property.\n        */\n        public abstract dataSources: any;\n\n        /**\n            The custom data source that will be invoked on the server to provide the data for this list.\n        */\n        public abstract dataSource: DataSource<TItem>;\n\n        /**\n            Name of the primary key of the model that this list represents.\n        */\n        public abstract modelKeyName: string;\n\n        // Reference to the class which this list represents.\n        protected abstract itemClass: new() => TItem;\n\n        /**\n            Properties which determine how this object behaves.\n        */\n        public abstract coalesceConfig: ListViewModelConfiguration<this, TItem> = null;\n\n        /**\n            Query string to append to the API call when loading the list of items.\n        */\n        public queryString: string = \"\";\n\n        /**\n            Object that contains property-level filters to be passed along to API calls.\n        */\n        public filter: any = null;\n\n        /** String that is used to control loading and serialization on the server. */\n        public includes: string = \"\";\n\n        /**\n            Whether or not alerts should be shown when loading fails.\n            @deprecated Use coalesceConfig.showFailureAlerts instead.\n        */\n        get showFailureAlerts() { return this.coalesceConfig.showFailureAlerts() }\n        set showFailureAlerts(value) { this.coalesceConfig.showFailureAlerts(value) }\n\n        /** The collection of items that have been loaded from the server. */\n        public items: KnockoutObservableArray<TItem> = ko.observableArray([]);\n\n        /**\n            Load the list using current parameters for paging, searching, etc\n            Result is placed into the items property.\n        */\n        public load = (callback?: any): JQueryPromise<any> => {\n            this.coalesceConfig.onStartBusy()(this);\n            this.isLoading(true);\n\n            var url = this.coalesceConfig.baseApiUrl() + this.apiController + \"/List?\" + this.queryParams('list');\n\n            return $.ajax({\n                method: \"GET\",\n                url: url,\n                xhrFields: { withCredentials: true }\n            })\n                .done((data) => {\n\n                    Coalesce.KnockoutUtilities.RebuildArray(this.items, data.list, this.modelKeyName, this.itemClass, this, true);\n                    $.each(this.items(), (_, model) => {\n                        model.includes = this.includes;\n                    });\n                    this.count(data.list.length);\n                    this.totalCount(data.totalCount);\n                    this.pageCount(data.pageCount);\n                    this.page(data.page);\n                    this.message(data.message);\n                    this.isLoaded(true);\n                    if (typeof(callback) == \"function\") callback(this);\n                })\n                .fail((xhr) => {\n                    var errorMsg = \"Unknown Error\";\n                    if (xhr.responseJSON && xhr.responseJSON.message) errorMsg = xhr.responseJSON.message;\n                    this.message(errorMsg);\n                    this.isLoaded(false);\n\n                    if (this.coalesceConfig.showFailureAlerts())\n                        this.coalesceConfig.onFailure()(this, \"Could not get list of \" + this.modelName + \" items: \" + errorMsg);\n                })\n                .always(() => {\n                    this.coalesceConfig.onFinishBusy()(this);\n                    this.isLoading(false);\n                });\n        };\n\n\n        /** Returns a query string built from the list's various properties, appropriate to the kind of parameters requested. */\n        public queryParams = (kind: 'dataSource' | 'filter' | 'list', pageSize?: number): string => {\n            var query = this.dataSource.getQueryString();\n\n            const param = (name: string, value: any) => {\n                if (value === null || value === undefined || value === \"\") {\n                    return;\n                }\n                query += `&${name}=${encodeURIComponent(value)}`;\n            };\n\n            param(\"includes\", this.includes);\n\n            if (kind == 'dataSource') return query;\n\n            if (this.queryString) query += \"&\" + this.queryString;\n\n            param(\"search\", this.search());\n\n            if (this.filter) {\n                for (var key in this.filter) {\n                    param(`filter.${key}`, this.filter[key]);\n                }\n            }\n\n            if (kind == 'filter') return query;\n\n            if (kind != 'list') throw \"unhandled kind \" + kind;\n\n            param(`page`, this.page());\n            param(`pageSize`, pageSize || this.pageSize());\n            param(`orderBy`, this.orderBy());\n            param(`orderByDescending`, this.orderByDescending());\n\n            return query;\n        };\n\n        /** Method which will instantiate a new item of the list's model type. */\n        protected abstract createItem: (newItem?: any, parent?: any) => TItem;\n\n        /** Adds a new item to the collection. */\n        public addNewItem = (): TItem => {\n            var item = this.createItem();\n            this.items.push(item);\n            return item;\n        };\n\n        /** Deletes an item. */\n        public deleteItem = (item: TItem): JQueryPromise<any> => {\n            return item.deleteItem();\n        };\n\n        /** True if the list is loading. */\n        public isLoading: KnockoutObservable<boolean> = ko.observable(false);\n\n        /** True once the list has been loaded. */\n        public isLoaded: KnockoutObservable<boolean> = ko.observable(false);\n\n        /** Gets the count of items without getting all the items. Result is placed into the count property. */\n        public getCount = (callback?: any): JQueryPromise<any> => {\n            this.coalesceConfig.onStartBusy()(this);\n            return $.ajax({\n                method: \"GET\",\n                url: this.coalesceConfig.baseApiUrl() + this.apiController + \"/Count?\" + this.queryParams('filter'),\n                xhrFields: { withCredentials: true }\n            })\n                .done((data) => {\n                    this.count(data);\n                    if (typeof(callback) == \"function\") callback();\n                })\n                .fail(() => {\n                    if (this.coalesceConfig.showFailureAlerts())\n                        this.coalesceConfig.onFailure()(this, \"Could not get count of \" + this.modelName + \" items.\");\n                })\n                .always(() => {\n                    this.coalesceConfig.onFinishBusy()(this);\n                });\n        };\n\n        /** The result of getCount() or the total on this page. */\n        public count: KnockoutObservable<number> = ko.observable(null);\n        /** Total count of items, even ones that are not on the page. */\n        public totalCount: KnockoutObservable<number> = ko.observable(null);\n        /** Total page count */\n        public pageCount: KnockoutObservable<number> = ko.observable(null);\n        /** Page number. This can be set to get a new page. */\n        public page: KnockoutObservable<number> = ko.observable(1);\n        /** Number of items on a page. */\n        public pageSize: KnockoutObservable<number> = ko.observable(10);\n        /** If a load failed, this is a message about why it failed. */\n        public message: KnockoutObservable<string> = ko.observable(null);\n        /** Search criteria for the list. This can be exposed as a text box for searching. */\n        public search: KnockoutObservable<string> = ko.observable(\"\");\n\n        /** True if there is another page after the current page. */\n        public nextPageEnabled: KnockoutComputed<boolean> = ko.computed(() => this.page() < this.pageCount());\n\n        /** True if there is another page before the current page. */\n        public previousPageEnabled: KnockoutComputed<boolean> = ko.computed(() => this.page() > 1);\n\n        /** Change to the next page */\n        public nextPage = (): void => {\n            if (this.nextPageEnabled()) {\n                this.page(this.page() + 1);\n            }\n        };\n\n        /** Change to the previous page */\n        public previousPage = (): void => {\n            if (this.previousPageEnabled()) {\n                this.page(this.page() - 1);\n            }\n        };\n\n\n        /** Name of a field by which this list will be loaded in ascending order */\n        public orderBy: KnockoutObservable<string> = ko.observable(\"\");\n\n        /** Name of a field by which this list will be loaded in descending order */\n        public orderByDescending: KnockoutObservable<string> = ko.observable(\"\");\n\n        /** Toggles sorting between ascending, descending, and no order on the specified field. */\n        public orderByToggle = (field: string): void => {\n            if (this.orderBy() == field && !this.orderByDescending()) {\n                this.orderBy('');\n                this.orderByDescending(field);\n            }\n            else if (!this.orderBy() && this.orderByDescending() == field) {\n                this.orderBy('');\n                this.orderByDescending('');\n            }\n            else {\n                this.orderBy(field);\n                this.orderByDescending('');\n            }\n        };\n\n        /** Returns URL to download a CSV for the current list with all items. */\n        public downloadAllCsvUrl: KnockoutComputed<string> = ko.computed<string>(() => {\n            var url = this.coalesceConfig.baseApiUrl() + this.apiController + \"/CsvDownload?\" + this.queryParams('list', 10000);\n            return url;\n        }, null, { deferEvaluation: true });\n\n        /** Prompts to the user for a file to upload as a CSV. */\n        public csvUploadUi = (callback?: () => void): void => {\n            // Remove the form if it exists.\n            $('#csv-upload').remove();\n            // Add the form to the page to take the input\n            $('body')\n                .append('<form id=\"csv-upload\" display=\"none\"></form>');\n            $('#csv-upload')\n                .attr(\"action\", this.coalesceConfig.baseApiUrl() + this.apiController + \"/CsvUpload\").attr(\"method\", \"post\")\n                .append('<input type=\"file\" style=\"visibility: hidden;\" name=\"file\"/>');\n\n            // Set up the click callback.\n            $('#csv-upload input[type=file]').change(() => {\n                // Get the files\n                var fileInput = $('#csv-upload input[type=file]')[0] as any;\n                var file = fileInput.files[0];\n                if (file) {\n                    var formData = new FormData();\n                    formData.append('file', file);\n                    this.coalesceConfig.onStartBusy()(this);\n                    this.isLoading(true);\n                    $.ajax({\n                        url: this.coalesceConfig.baseApiUrl() + this.apiController + \"/CsvUpload\",\n                        data: formData,\n                        processData: false,\n                        contentType: false,\n                        type: 'POST'\n                    } as any)\n                        .done((data) => {\n                            this.isLoading(false);\n                            if (typeof(callback) == \"function\") callback();\n                        })\n                        .fail((data) => {\n                            if (this.coalesceConfig.showFailureAlerts())\n                                this.coalesceConfig.onFailure()(this, \"CSV Upload Failed\");\n                        })\n                        .always(() => {\n                            this.load();\n                            this.coalesceConfig.onFinishBusy()(this);\n                        });\n                }\n                // Remove the form\n                $('#csv-upload').remove();\n            });\n            // Click on the input box\n            $('#csv-upload input[type=file]').click();\n        };\n\n        private loadTimeout: number = 0;\n\n        /** reloads the list after a slight delay (100ms default) to ensure that all changes are made. */\n        public delayedLoad = (milliseconds?: number): void => {\n            if (this.loadTimeout) {\n                clearTimeout(this.loadTimeout);\n            }\n            this.loadTimeout = setTimeout(() => {\n                this.loadTimeout = 0;\n                this.load();\n            }, milliseconds || 100);\n        }\n\n        public constructor() {\n            this.pageSize.subscribe(() => {\n                if (this.isLoaded()) {\n                    this.load();\n                }\n            });\n            this.page.subscribe(() => {\n                // Page is set while we're loading results - ignore changes while isLoading() == true\n                if (this.isLoaded() && !this.isLoading()) {\n                    this.delayedLoad(300);\n                }\n            });\n            this.search.subscribe(() => { if (this.isLoaded()) this.delayedLoad(300); });\n            this.orderBy.subscribe(() => { if (this.isLoaded()) this.delayedLoad(); });\n            this.orderByDescending.subscribe(() => { if (this.isLoaded()) this.delayedLoad(); });\n        }\n    }\n}","/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\nmodule Coalesce {\n    export module KnockoutUtilities {\n\n        function BuildLookup<T>(array: T[], idField: string) {\n            var lookup: { [k: string]: T; } = {};\n            for (let i = 0; i < array.length; i++) {\n                var item = array[i];\n                var key = ko.unwrap((item as any)[idField]);\n\n                // If an item is missing a value for a key, we can't look it up.\n                // This is OK, because keyless items will never match an incoming item anyway.\n                if (key != null) lookup[key.toString()] = item;\n            }\n            return lookup;\n        }\n\n        function GetMatchingItem<U, T>(\n            originalContent: U[],\n            incomingItem: T,\n            incomingItemIndex: number,\n            originalLookup: { [k: string]: U; } = null,\n            idField: string = null,\n            equalityComparer: (existingItem: U, incomingKey: any) => boolean = null\n        ) {\n            var matchingItem: U;\n            if (idField) {\n                let key = ko.unwrap((incomingItem as any)[idField]);\n                if (originalLookup) {\n                    matchingItem = originalLookup[key.toString()];\n                } else {\n                    let matchingItems = originalContent.filter(item => equalityComparer(item, key));\n\n                    if (matchingItems.length > 1) {\n                        // We have a problem because keys are duplicated.\n                        throw `Found duplicate items by key (name:${idField}) when rebuilding array.`\n                    } else {\n                        matchingItem = matchingItems.length > 0 ? matchingItems[0] : null;\n                    }\n                }\n            } else {\n                matchingItem = originalContent[incomingItemIndex];\n            }\n\n            return matchingItem;\n        }\n\n        // Function to marge two arrays based on data from the server\n        export function RebuildArray<U extends LoadableViewModel, T extends object>(\n            existingArray: KnockoutObservableArray<U>,\n            incomingArray: T[],\n            idField: string,\n            viewModelClass: new () => U,\n            parent: any,\n            allowCollectionDeletes: boolean = true,\n            equalityComparer: (existingItem: U, incomingKey: any) => boolean = null\n        ) {\n\n            var originalContent = existingArray() || [];\n\n            // We're going to build a new array from scratch.\n            // If we spliced and pushed the existing array one row at a time as needed,\n            // it performs much more slowly, and also rebuilds the DOM in realtime as that happens.\n            // This is because each push/splice triggers all subscribers to update.\n            // If there are expensive subscriptions (not just the DOM - custom application code as well),\n            // then performance drops off the edge of a cliff into a firey abyss.\n\n            // Knockout is smart enough when we update the value of existingArray with newArray\n            // to figure out exactly what changed, and will only rebuild the DOM as needed,\n            // instead of rebuilding the entire thing: http://stackoverflow.com/a/18050443.\n            // However, there will ALWAYS be one single notification to subscribers, even if we didn't actually change the array.\n            // If arrays are being rebuilt frequently, this \"false\" subscriber notification could be detrimental to performance.\n            // To prevent this from happening, at the bottom of this function we perform an array comparison before updating the final observable.\n            var newContent: Array<U> = [];\n\n            // If no specific equality comparison has been requested,\n            // use a hash table for O(1) lookups on a single key to prevent O(n^2) from nested for-loops.\n            if (equalityComparer == null && idField) {\n                var originalLookup = BuildLookup(originalContent, idField);\n            }\n\n            // Can't do for (var i in array) because IE sees new methods added on to the prototype as keys\n            for (let i = 0; i < incomingArray.length; i++) {\n                var inItem = incomingArray[i];\n                var matchingItem = GetMatchingItem(originalContent, inItem, i, originalLookup, idField, equalityComparer);\n\n                if (matchingItem == null) {\n                    // This is a brand new item that we don't already have an object for.\n                    // We need to construct a new object and stick it in our newArray.\n                    var newItem = new viewModelClass();\n                    newItem.loadFromDto(inItem);\n                    newItem.parent = parent;\n                    newItem.parentCollection = existingArray;\n                    newContent.push(newItem);\n                } else {\n                    // We already have an object for this item.\n                    // Stick the existing object into our new array, and then reload it from the DTO.\n                    newContent.push(matchingItem);\n\n                    // Only reload the item if it is not dirty. If it is dirty, there are user-made changes\n                    // that aren't yet saved that we shouldn't be overwriting.\n\n                    if (!(matchingItem instanceof BaseViewModel) || !matchingItem.isDirty()) {\n                        matchingItem.loadFromDto(inItem);\n                    }\n\n                    if (!allowCollectionDeletes) {\n                        // This item is already in the collection, and we're not allowing not-found items to be deleted from the collection.\n                        // We're going to do a pass of everything that was in the original collection at this end of this method,\n                        // where we'll add everything from the original collection to the new collection.\n                        // We need to remove the current item from the original collection so it doesn't get added again when we do that.\n                        originalContent.splice(originalContent.indexOf(matchingItem), 1);\n                    }\n                }\n            }\n\n            // If we are not allowing deletes.\n            if (!allowCollectionDeletes) {\n                // If we aren't allowing deletes, we need to add all items from the original collection\n                // to the new collection that we haven't already added. At this point, originalContent contains that set.\n\n                // Note that this used to only re-insert items that are dirty,\n                // but that didn't make any sense, and there was no comment that said why it was done that way.\n                // So, we're just going to add in everything from originalContent.\n                newContent.unshift(...originalContent);\n            }\n\n            if (newContent.length == originalContent.length &&\n                ko.utils.compareArrays(newContent, originalContent).every(c => c.status == \"retained\")) {\n                // Everything is the same (by doing a shallow equality check of the array - objects are checked by reference).\n                // Shallow equality check by reference is perfectly in line with the spec for ObservableArray.\n\n                // Do nothing.\n            } else {\n                // Something is different. Update the observable.\n                // See the comments at the top of this method for why we do this conditionally.\n                // Basically, its because this call ALWAYS notifies subscribers, but we can be more intelligent about it.\n                existingArray(newContent);\n            }\n        }\n\n\n        export function RebuildArrayInPlace<T>(\n            existingArray: KnockoutObservableArray<T>,\n            incomingArray: T[] | KnockoutObservableArray<T>,\n            idField?: string,\n            equalityComparer: (existingItem: T, incomingKey: any) => boolean = null\n        ) {\n            var incomingArrayUnwrapped = ko.unwrap(incomingArray);\n            var originalContent = existingArray().slice();\n\n            // If no specific equality comparison has been requested,\n            // use a hash table for O(1) lookups on a single key to prevent O(n^2) from nested for-loops.\n            if (equalityComparer == null && idField) {\n                var originalLookup = BuildLookup(originalContent, idField);\n            }\n\n            for (let i = 0; i < incomingArrayUnwrapped.length; i++) {\n                var inItem = incomingArrayUnwrapped[i];\n                var matchingItem = GetMatchingItem(originalContent, inItem, i, originalLookup, idField, equalityComparer);\n\n                if (matchingItem == null) {\n                    // Add this to the observable collection\n                    existingArray.push(inItem);\n                } else {\n                    // Remove this one from the copy so we don't remove it later.\n                    originalContent.splice(originalContent.indexOf(matchingItem), 1);\n                }\n            }\n\n            // Remove any items that we didn't find in the incoming array.\n            for (var i in originalContent) {\n                existingArray.splice(existingArray.indexOf(originalContent[i]), 1);\n            }\n        }\n    }\n}","/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\n// Extend this class to have the right types.\ninterface KnockoutBindingHandlers {\n    select2Ajax: KnockoutBindingHandler;\n    select2AjaxMultiple: KnockoutBindingHandler;\n    select2AjaxText: KnockoutBindingHandler;\n    datePicker: KnockoutBindingHandler;\n    select2: KnockoutBindingHandler;\n    delaySave: KnockoutBindingHandler;\n    tooltip: KnockoutBindingHandler;\n    fadeVisible: KnockoutBindingHandler;\n    slideVisible: KnockoutBindingHandler;\n    moment: KnockoutBindingHandler & { defaults: any };\n    momentFromNow: KnockoutBindingHandler & { defaults: any };\n    booleanValue: KnockoutBindingHandler;\n    formatNumberText: KnockoutBindingHandler;\n}\n\n\n// Select2 binding for an object that uses an AJAX call for valid values. \nko.bindingHandlers.select2Ajax = {\n    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var url = allBindings.get('url');\n        var textField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('textField'));\n        var idField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('idField'));\n\n        var selectionFormat = allBindings.has(\"selectionFormat\") ? allBindings.get(\"selectionFormat\") : '{0}';\n        var format = allBindings.has(\"format\") ? allBindings.get(\"format\") : '{0}';\n        var setObject = allBindings.has(\"setObject\") ? allBindings.get(\"setObject\") : false;\n        var itemViewModel: new (newItem: object) => Coalesce.BaseViewModel = allBindings.get('itemViewModel');\n        var object: KnockoutObservable<Coalesce.BaseViewModel> = allBindings.has('object') ? allBindings.get('object') : null;\n        var selectOnClose = allBindings.has(\"selectOnClose\") ? allBindings.get(\"selectOnClose\") : false;\n        var openOnFocus = allBindings.has(\"openOnFocus\") ? allBindings.get(\"openOnFocus\") : false; // This doesn't work in IE (GE: 2016-09-27)\n        var allowClear = allBindings.has(\"allowClear\") ? allBindings.get(\"allowClear\") : true;\n        var placeholder = $(element).attr('placeholder') || \"select\";\n        var pageSize = allBindings.get('pageSize') || 25;\n\n        if (!url) throw \"select2Ajax requires additional binding 'url'\";\n        if (!textField) throw \"select2Ajax requires additional binding 'textField'\";\n        if (!idField) throw \"select2Ajax requires additional binding 'idField'\";\n        if (setObject && !itemViewModel)\n            throw \"select2Ajax with 'setObject' requires additional binding 'itemViewModel'.\"\n            + \" This should be a reference to the class of object being selected - e.g.ViewModels.Person.\";\n\n        interface ResultItem {\n            id: any,\n            text: string,\n            _apiObject?: object\n        }\n\n        // Create the Select2\n        $(element)\n            .select2({\n                ajax: {\n                    url: url,\n                    dataType: 'json',\n                    delay: 250,\n                    data: function (params: any) {\n                        var data: any = {\n                            search: params.term,\n                            page: params.page,\n                            pageSize: pageSize,\n                        };\n\n                        if (!setObject) {\n                            // If we're NOT going to populate the object observable with the results from our API call,\n                            // then its safe to only get the two fields that we need to populate the dropdown.\n                            // If we ARE going to set the object (setObject == true), then we should be requesting the entire object from the server.\n\n                            // There may be scenarios where you may want to set the object but still only want the two fields.\n                            // In this case, just specify \".../list?fields=field1,field2\" as part of the url in the binding.\n                            data.fields = idField + \",\" + textField;\n                        };\n\n                        if (!allBindings.has('cache') || allBindings.get('cache'))\n                            data[\"_\"] = new Date().getTime();\n                        return data;\n                    },\n                    processResults: function (data: any, params: any) {\n\n                        // Transform our objects into what select2 wants (it needs objects with a key \"id\").\n                        // We throw the raw object from the API on there as well so we can use it when handling a selection.\n                        var results = (data.list as any[]).map(item => {\n                            return {\n                                id: item[idField],\n                                text: item[textField],\n                                _apiObject: item,\n                            } as ResultItem;\n                        });\n\n\n                        // This doesn't seem to have ever worked. Params doesn't have a property named 'page'.\n                        // Leaving it commented out to maintain that there was some intention to do this, \n                        // but we seem to have gotten by just fine with out it up until now.\n\n                        //if (allowClear && params.page == 1) {\n                        //    // Add a blank item\n                        //    var blank = {\n                        //        id: 0, // This should probably not be 0, since 0 is a totally valid primary key.\n                        //        text: 'No Selection',\n                        //    };\n                        //    results.unshift(blank);\n                        //}\n\n                        return {\n                            results: results,\n                            pagination: {\n                                more: data.page < data.pageCount\n                            }\n                        };\n                    },\n                    cache: (allBindings.has('cache') ? allBindings.get('cache') : false).toString(),\n                },\n                placeholder: placeholder,\n                allowClear: allowClear,\n                selectOnClose: selectOnClose,\n                templateResult: function (item: any) {\n                    return format.replace('{0}',\n                        typeof item.text == \"string\" ? item.text :\n                            typeof item == \"string\" ? item : \"\"\n                    );\n                },\n                templateSelection: function (item: any) {\n                    return format.replace('{0}',\n                        typeof item.text == \"string\" ? item.text :\n                            typeof item == \"string\" ? item : \"\"\n                    );\n                },\n            })\n            .on(\"change\", function (e) {\n                // Code to update knockout\n                var value: string = $(element).val() as string;\n\n                // Loose equality is intentional - select2 always provides a string value when asked, \n                // but our observable is probably an integer number.\n                if (valueAccessor()() != value && (valueAccessor()() || value)) {\n\n                    // Just like we do in the .loadFromDto method in the generated ViewModels,\n                    // we load the object property first BEFORE we load the primary key.\n\n                    if (object) {\n                        // Set the object if such functionality is enabled\n                        if (setObject) {\n                            var selectedData = $(element).select2(\"data\");\n                            if (selectedData && selectedData.length > 0) {\n                                var result = (selectedData[0] as ResultItem)._apiObject;\n\n                                var oldObject = object();\n                                if (oldObject instanceof itemViewModel) {\n                                    oldObject.loadFromDto(result);\n                                } else {\n                                    object(new itemViewModel(result));\n                                }\n                            } else {\n                                object(null);\n                            }\n                        }\n                        else {\n                            // Clear the object because we don't know anything about it.\n                            // It might be reloaded when the parent object is saved.\n                            object(null);\n                        }\n                    }\n\n                    // Set the ID.\n                    if (value) {\n                        valueAccessor()(value);\n                    } else {\n                        valueAccessor()(null);\n                    }\n                }\n            });\n\n        if (openOnFocus) {\n            $.data(element).select2.on(\"focus\", function () {\n                $(element).select2(\"open\");\n            });\n        }\n\n        // Add the validation message\n        ko.bindingHandlers['validationCore'].init(element, valueAccessor, allBindings, viewModel, bindingContext)\n        // The validation message needs to go after the new select2 dropdown, not before it.\n        $(element).next(\".validationMessage\").insertAfter($(element).nextAll(\".select2\").first());\n    },\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // See if the value exists. If not, we haven't loaded it from the server yet.\n        var clearOnNull = allBindings.get(\"clearOnNull\") || false;\n        var value = valueAccessor()();\n        var select2Value = $(element).val();\n        var setObject = allBindings.has(\"setObject\") ? allBindings.get(\"setObject\") : false;\n        var textField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('textField'));\n        var idField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('idField'));\n        var object: KnockoutObservable<any> = allBindings.get('object')\n\n        // See if something has changed\n        var option: HTMLOptionElement;\n        var triggerSelect2Change = false;\n\n        if (value) {\n            let options = $(element).find('option[value=\"' + value.toString().replace(/\"/g, '\\\\\"') + '\"]');\n            if (options.length > 0) option = options[0] as HTMLOptionElement;\n        } else {\n            let options = $(element).find('option[value=\"' + value + '\"]');\n            if (options.length > 0) option = options[0] as HTMLOptionElement;\n        }\n\n        if (!option) {\n            option = new Option();\n            option.value = value;\n            option.selected = true;\n            option.defaultSelected = true;\n\n            $(element).append(option);\n            triggerSelect2Change = true;\n        }\n\n\n        if (value === null && clearOnNull) {\n            $(element).val(\"\").trigger(\"change\");\n        } else {\n            // Add it based on the object.\n            var objectUnwrapped = ko.unwrap(object);\n            if (value && objectUnwrapped) {\n                // Get the raw key value from the object that we think represents the selected key.\n                var id = ko.unwrap(objectUnwrapped[idField]);\n                var text = ko.unwrap(objectUnwrapped[textField]);\n\n                // Check id == value here to make sure we're creating an option for the correct object.\n                // If the observable holding the ID changes but the object doesn't, then these won't match,\n                // and we would risk displaying the wrong data if we didn't check for this.\n                if (text && id && id == value) {\n                    option.text = text;\n                    triggerSelect2Change = true;\n                }\n            }\n        }\n\n        // Set the element based on the value in the model.\n        if (triggerSelect2Change) {\n\n            // When a change is triggered in select2, it doesn't update its internal option object\n            // to reflect the text of the HTMLOptionElement. So, we have to manually update it,\n            // taking care to only change it if the IDs match.\n            var select2Option = $(element).select2(\"data\")[0];\n            if (select2Option && select2Option.id == option.value) {\n                select2Option.text = option.text;\n            }\n\n            $(element).val(value).trigger('change');\n        }\n    }\n};\n\n// Multi-select Select2 binding that uses an AJAX call for the list of valid values.\nko.bindingHandlers.select2AjaxMultiple = {\n    init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var url = allBindings.get('url');\n        var itemViewModel: new (newItem: object) => Coalesce.BaseViewModel = allBindings.get('itemViewModel');\n\n        // 'idFieldName' was the old name, kept for backwards compat. 'idField' is the new name.\n        var idField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('idFieldName') || allBindings.get('idField'));\n        var textField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('textFieldName') || allBindings.get('textField'));\n\n        if (!url) throw \"select2AjaxMultiple requires additional binding 'url'\";\n        if (!itemViewModel) throw \"select2AjaxMultiple requires additional binding 'itemViewModel'.\"\n            + \" This should be the class of the foreign end of the relationship - e.g.ViewModels.Case.\";\n        if (!idField) throw \"select2AjaxMultiple requires additional binding 'idField'\";\n        if (!textField) throw \"select2AjaxMultiple requires additional binding 'textField'\";\n\n        var selectionFormat = allBindings.has(\"selectionFormat\") ? allBindings.get(\"selectionFormat\") : '{0}';\n        var format = allBindings.has(\"format\") ? allBindings.get(\"format\") : '{0}';\n        var selectOnClose = allBindings.has(\"selectOnClose\") ? allBindings.get(\"selectOnClose\") : false;\n        var openOnFocus = allBindings.has(\"openOnFocus\") ? allBindings.get(\"openOnFocus\") : false;\n        var allowClear = allBindings.get('allowClear') || true\n        var placeholder = $(element).attr('placeholder') || \"select\";\n        var updating = false;\n        var pageSize = allBindings.get('pageSize') || 25;\n\n        interface ResultItem {\n            id: any,\n            text: string,\n            _apiObject?: object\n        }\n\n        // Create the Select2\n        $(element)\n            .select2({\n                ajax: {\n                    url: url,\n                    dataType: 'json',\n                    delay: 250,\n                    data: function (params: any) {\n                        var data: any = {\n                            search: params.term,\n                            page: params.page\n                        };\n                        if (!allBindings.has('cache') || allBindings.get('cache'))\n                            data[\"_\"] = new Date().getTime();\n                        return data;\n                    },\n                    processResults: function (data: any, params: any) {\n                        // Transform our objects into what select2 wants (it needs objects with a key \"id\").\n                        // We throw the raw object from the API on there as well so we can use it when handling a selection.\n                        var results = (data.list as any[]).map(item => {\n                            return {\n                                id: item[idField],\n                                text: item[textField],\n                                _apiObject: item,\n                            } as ResultItem;\n                        });\n\n                        return {\n                            results: results,\n                            pagination: {\n                                more: data.page < data.pageCount\n                            }\n                        };\n                    },\n                    cache: (allBindings.has('cache') ? allBindings.get('cache') : false).toString(),\n                },\n                //escapeMarkup: function (markup) { return markup; }, // let our custom formatter work\n                //minimumInputLength: 1,\n                placeholder: placeholder,\n                selectOnClose: selectOnClose,\n                allowClear: allowClear,\n                templateResult: function (item: any) {\n                    if (item.Classes) {\n                        // This has a class use the formatting\n                        var optionElement = $('<span class=\"' + item.Classes + '\">' +\n                            format.replace('{0}', (typeof item.text == \"string\" ? item.text : item))\n                            + '</span>');\n                        return optionElement;\n                    }\n                    return format.replace('{0}', (typeof item.text == \"string\" ? item.text : item));\n                },\n                templateSelection: function (item: any) {\n                    //if (e.Classes) {\n                    //    // This has a class use the formatting\n                    //    var optionElement = $('<span class=\"' + e.Classes + '\">' +\n                    //        format.replace('{0}', (e[textFieldName] || e.text || e))\n                    //        + '</span>');\n                    //    return optionElement;\n                    //}\n                    return selectionFormat.replace('{0}', (item.text || item));\n                },\n            })\n            .on(\"change\", function (e) {\n                if ($(element).data(\"select2-ajax-updating\")) return;\n                $(element).data(\"select2-ajax-updating\", true);\n\n                // Code to update knockout\n                var selectedItems = $(element).select2(\"data\");\n                var values: KnockoutObservableArray<Coalesce.BaseViewModel> = valueAccessor();\n                if (values() && selectedItems && values().length != selectedItems.length) {\n                    // Add the items to the observable array.\n                    // Warning: this code is O(n^2), but n should always be very reasonably small (if its > 50, you shouldn't be using a control like this.)\n                    if (selectedItems.length > values().length) {\n                        // Item was added.\n                        for (var i = 0; i < selectedItems.length; i++) {\n                            var selectedItem = selectedItems[i];\n                            var found = false;\n                            for (var j = 0; j < values().length; j++) {\n                                var value = values()[j];\n                                found = found || (value.myId == selectedItem.id);\n                            }\n                            if (!found) {\n                                // This is the missing one.\n                                values.push(new itemViewModel(selectedItem._apiObject));\n                            }\n                        }\n                    } else if (selectedItems.length < values().length) {\n                        // Item was removed\n                        for (var i = 0; i < values().length; i++) {\n                            var value = values()[i];\n                            var found = false;\n                            for (var j = 0; j < selectedItems.length; j++) {\n                                var selectedItem = selectedItems[j];\n                                found = found || (value.myId == selectedItem.id);\n                            }\n                            if (!found) {\n                                // This is the missing one. Remove it.\n                                values.splice(i, 1);\n\n                                // Also remove the corresponding option element, if there is one.\n                                // See the wall of text in the update handler of this binding below for an explanation why.\n                                $(element).find(\"option\").filter((_, e) => e.getAttribute(\"value\") == value.myId).remove();\n                            }\n                        }\n\n                    } else {\n                        // Nothing changed.\n                    }\n                }\n\n                $(element).data(\"select2-ajax-updating\", false);\n            });\n        if (openOnFocus) {\n            $.data(element).select2.on(\"focus\", function () {\n                $(element).select2(\"open\");\n            });\n        }\n    },\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // Make sure that we read the valueAccessor BEFORE we return out of this function.\n        // Otherwise, the dependency detection will not be set up correctly.\n        // See https://stackoverflow.com/a/23880007/2465631;\n        var value: Array<any> = valueAccessor()();\n\n        if ($(element).data(\"select2-ajax-updating\")) return;\n        $(element).data(\"select2-ajax-updating\", true);\n\n        var idFieldName = Coalesce.Utilities.lowerFirstLetter(allBindings.get('idFieldName') || allBindings.get('idField'));\n        var textFieldName = Coalesce.Utilities.lowerFirstLetter(allBindings.get('textFieldName') || allBindings.get('textField'));\n\n        // See if the value exists. If not, we haven't loaded it from the server yet.\n        var select2Value = $(element).val();\n        if (!select2Value) select2Value = [];\n        var selectedIds = [];\n        // Convert the field names to js variables.\n        textFieldName = textFieldName.charAt(0).toLowerCase() + textFieldName.slice(1);\n        idFieldName = idFieldName.charAt(0).toLowerCase() + idFieldName.slice(1);\n\n        // Remove all of the temporary option elements that we had to create.\n        // These option elements are created so that select2 can display items that are\n        // part of the collection of selected objects, but were not added to the list via select2 -\n        // they came either with the initial data load, or were manually added to the undelying collection programatically.\n        // We have to remove these options because if we don't,\n        // and the user decides to remove an option from the selection box and then re-select that same item,\n        // select2 won't use the \"options\" object from its ajax call (which contains our _apiObject property) -\n        // it will use a fake object that it made that contains only and 'id' and 'text' property.\n        $(element).find(\"option\").remove();\n\n        for (var i in value) {\n            var item = value[i];\n            var text = item[textFieldName]();\n            var id = item[idFieldName]();\n            var option = new Option(text, id, true, true);\n            $(element).append(option);\n            selectedIds.push(id);\n        }\n\n        $(element).val(selectedIds).trigger('change');\n        $(element).data(\"select2-ajax-updating\", false);\n    }\n};\n\n\n// Select2 binding for a string value to show a list of other values\nko.bindingHandlers.select2AjaxText = {\n    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var url = allBindings.get('url');\n        var selectOnClose = allBindings.has(\"selectOnClose\") ? allBindings.get(\"selectOnClose\") : false;\n        var openOnFocus = allBindings.has(\"openOnFocus\") ? allBindings.get(\"openOnFocus\") : false; // This doesn't work in IE (GE: 2016-09-27)\n        var allowClear = allBindings.get('allowClear') || true\n        var placeholder = $(element).attr('placeholder') || \"select\";\n\n        var myParams: any;\n\n        // Create the Select2\n        $(element)\n            .select2({\n                ajax: {\n                    url: url,\n                    dataType: 'json',\n                    delay: 250,\n                    data: function (params: any) {\n                        myParams = params\n                        var data: any = {\n                            search: params.term,\n                            page: params.page\n                        };\n                        if (!allBindings.has('cache') || allBindings.get('cache'))\n                            data[\"_\"] = new Date().getTime();\n                        return data;\n                    },\n                    processResults: function (data: any, page: any) {\n                        var result = [];\n                        if (allowClear && !myParams.term) {\n                            // Add a blank item\n                            var blank = {\n                                id: 0,\n                                text: 'No Selection'\n                            };\n                            result.unshift(blank);\n                        }\n                        var perfectMatch = false;\n\n                        var items: any[];\n                        if (Array.isArray(data)) {\n                            // Raw endpoint that serves an array response.\n                            items = data;\n                        }\n                        else if (typeof data !== \"object\") {\n                            throw \"Couldn't figure out how to access the text results - response wasn't an object for call to \" + url;\n                        }\n                        else if (Array.isArray(data.object)) {\n                            // Endpoint that serves an ItemResult<IEnumerable<string>>\n                            // For example, a custom model method or static method.\n                            items = data.object;\n                        }\n                        else if (Array.isArray(data.list)) {\n                            // Endpoint that serves a ListResult<string>\n                            items = data.list;\n                        }\n                        else {\n                            throw \"Couldn't figure out how to access the text results for call to \" + url;\n                        }\n\n                        for (let item of items) {\n                            if (item == myParams.term) {\n                                perfectMatch = true;\n                                result.push({ id: item, text: item, selected: true });\n                            } else {\n                                result.push({ id: item, text: item });\n                            }\n                        }\n                        if (!perfectMatch && myParams.term) {\n                            result.push({ id: myParams.term, text: myParams.term, selected: true });\n                        }\n                        return { results: result };\n                    },\n                    cache: (allBindings.has('cache') ? allBindings.get('cache') : false).toString(),\n                },\n                //escapeMarkup: function (markup) { return markup; }, // let our custom formatter work\n                //minimumInputLength: 1,\n                placeholder: placeholder,\n                allowClear: allowClear,\n                selectOnClose: selectOnClose\n            })\n            .on(\"change\", function (e) {\n                // Code to update knockout\n                var value = $(element).val();\n                if (valueAccessor()() !== value) {\n                    if (value) {\n                        valueAccessor()(value);\n                    } else {\n                        valueAccessor()(null);\n                    }\n                }\n            });\n        if (openOnFocus) {\n            $.data(element).select2.on(\"focus\", function () {\n                $(element).select2(\"open\");\n            });\n        }\n\n    },\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // See if the value exists. If not, we haven't loaded it from the server yet.\n        var value = valueAccessor()();\n        var options;\n        if (value) {\n          options = $(element).find('option[value=\"' + value.toString().replace(/\"/g, '\\\\\"') + '\"]');\n        } else {\n          options = $(element).find('option[value=\"' + value + '\"]');\n        }\n\n\n        // The option doesn't exist.\n        if (options.length == 0) {\n            // Add it based on the object.\n            var option = new Option(value, value, true, true);\n            $(element).append(option);\n        }\n\n        // Set the element based on the value in the model.\n        $(element).val(valueAccessor()()).trigger('change');\n    }\n};\n\n\n// Simple Select2 binding used with an options list that is in HTML \nko.bindingHandlers.select2 = {\n    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var selectOnClose = allBindings.has(\"selectOnClose\") ? allBindings.get(\"selectOnClose\") : false;\n        var openOnFocus = allBindings.has(\"openOnFocus\") ? allBindings.get(\"openOnFocus\") : false; // This doesn't work in IE (GE: 2016-09-27)\n        var allowClear = allBindings.get('allowClear') || true\n        var placeholder = $(element).attr('placeholder') || \"select\";\n\n        // Create the Select2\n        $(element)\n            .select2({\n                placeholder: placeholder,\n                allowClear: allowClear,\n                selectOnClose: selectOnClose,\n            })\n            .on(\"change\", function (e) {\n                // Code to update knockout\n                var value = $(element).val();\n                if (valueAccessor()() != value) {\n                    if (value) {\n                        valueAccessor()(value);\n                    } else {\n                        valueAccessor()(null);\n                    }\n                }\n            });\n        if (openOnFocus) {\n            $.data(element).select2.on(\"focus\", function () {\n                $(element).select2(\"open\");\n            });\n        }\n\n\n        // Add the validation message\n        ko.bindingHandlers['validationCore'].init(element, valueAccessor, allBindings, viewModel, bindingContext)\n        // The validation message needs to go after the new select2 dropdown, not before it.\n        $(element).next(\".validationMessage\").insertAfter($(element).nextAll(\".select2\").first());\n    },\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // Set the element based on the value in the model.\n        $(element).val(valueAccessor()()).trigger('change');\n    }\n};\n\n\nko.bindingHandlers.datePicker = {\n    init: function (element, valueAccessor: () => KnockoutObservable<moment.Moment>, allBindings, viewModel, bindingContext) {\n        // See if we should use the parent element \n        var theElement = $(element).parent(\".input-group.date\") || $(element);\n\n        var getValue = (): moment.Moment | null => {\n            var newValue = theElement.data(\"DateTimePicker\").date();\n\n            if (!newValue) {\n                return null;\n            }\n\n            var preserveDate = allBindings.get('preserveDate') || false;\n            var preserveTime = allBindings.get('preserveTime') || false;\n            var unwrappedValue = valueAccessor()();\n\n            if (!preserveDate && !preserveTime) {\n                newValue = newValue;\n            } else if (preserveTime) {\n                // This is a date entry, keep the time. \n                var unwrappedTime = moment.duration(unwrappedValue.format('HH:mm:ss'));\n                newValue = moment(newValue.format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").add(unwrappedTime);\n            } else if (preserveDate) {\n                // This is a time entry, keep the date.\n                var newTime = moment.duration(newValue.format('HH:mm:ss'));\n                newValue = moment(unwrappedValue.format('YYYY/MM/DD'), \"YYYY/MM/DD\").add(newTime);\n            }\n\n            return newValue;\n        }\n\n        var updateValue = () => {\n            var newValue = getValue();\n\n            // Set the value if it has changed.\n            var currentObservable = valueAccessor()();\n            if (!currentObservable || !newValue || !newValue.isSame(currentObservable)) {\n                valueAccessor()(newValue);\n            }\n        }\n\n\n\n        theElement.datetimepicker({\n            format: allBindings.get('format') || \"M/D/YY h:mm a\",\n            stepping: allBindings.get('stepping') || 1,\n            sideBySide: allBindings.get('sideBySide') || false,\n            timeZone: allBindings.get('timeZone') || \"\",\n            keyBinds: allBindings.get('keyBinds') || { left: null, right: null, delete: null },\n        })\n            .on(\"dp.change\", function (e) {\n                if (allBindings.get('updateImmediate')) {\n                    updateValue();\n                }\n            })\n            .on(\"dp.hide\", updateValue)\n            .on('click', e => e.stopPropagation())\n            .on('dblclick', e => e.stopPropagation());\n\n        $(element)\n            .on(\"blur\", updateValue);\n\n        // Add the validation message\n        ko.bindingHandlers['validationCore'].init(element, valueAccessor, allBindings, viewModel, bindingContext)\n        // The validation message needs to go after the input group with the button.\n        $(element).next(\".validationMessage\").insertAfter($(theElement));\n    },\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // Set the element based on the value in the model.\n        var theElement = $(element).parent(\".input-group.date\") || $(element);\n        if (valueAccessor()()) theElement.data(\"DateTimePicker\").date(valueAccessor()());\n        else theElement.data(\"DateTimePicker\").date(null);\n\n    }\n};\n\n\nko.bindingHandlers.saveImmediately = {\n    init: function (element, valueAccessor, allBindings, viewModel: Coalesce.BaseViewModel, bindingContext) {\n        if (!viewModel.coalesceConfig || !viewModel.coalesceConfig.autoSaveEnabled) {\n            console.error(\"saveImmediately binding was used in a context where $data is not a Coalesce.BaseViewModel\");\n            return;\n        }\n\n        // Set up to save immediately when the cursor enters and return to a regular state when it leaves.\n        var oldTimeoutValue: number;\n        $(element).on(\"focus\", function () {\n            oldTimeoutValue = viewModel.coalesceConfig.saveTimeoutMs.raw();\n            viewModel.coalesceConfig.saveTimeoutMs(0);\n        });\n        $(element).on(\"blur\", function () {\n            viewModel.coalesceConfig.saveTimeoutMs(oldTimeoutValue);\n        });\n    }\n};\n\n\n// Delays the save until the cursor leaves the field even if there is a value change.\nko.bindingHandlers.delaySave = {\n    init: function (element, valueAccessor, allBindings, viewModel: Coalesce.BaseViewModel, bindingContext) {\n        if (!viewModel.coalesceConfig || !viewModel.coalesceConfig.autoSaveEnabled) {\n            console.error(\"delaySave binding was used in a context where $data is not a Coalesce.BaseViewModel\");\n            return;\n        }\n        var existingAutoSaveValueRaw: boolean;\n\n        // Set up to not save immediately when the cursor enters and return to a regular state when it leaves.\n        $(element).on(\"focus\", function () {\n            existingAutoSaveValueRaw = viewModel.coalesceConfig.autoSaveEnabled.raw();\n            viewModel.coalesceConfig.autoSaveEnabled(false);\n        });\n        // Turn it back to previous state when the cursor leaves.\n        $(element).on(\"blur\", function () {\n            viewModel.coalesceConfig.autoSaveEnabled(existingAutoSaveValueRaw);\n            // If there were changes, perform an autosave now (autoSave() won't save if autosave is disabled.)\n            if (viewModel.isDirty()) {\n                viewModel.autoSave();\n            }\n\n        });\n    }\n};\n\n\n// Binding for Bootstrap ToolTips\n// Format: tooltip: {title:note}  (where note is the observable with the value you want)\n// Format: tooltip: {title:note, placement: 'bottom', animation: false}  (where note is the observable with the value you want)\n// Format: tooltip: note          (where note is the observable with the value you want)\nko.bindingHandlers.tooltip = {\n    init: function (element) {\n        var $element = $(element);\n\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n            if ($element.data('bs.tooltip')) {\n                $element.tooltip('destroy');\n            }\n        });\n    },\n\n    update: function (element, valueAccessor) {\n        var $element = $(element);\n        var value = ko.unwrap(valueAccessor());\n        var options: any = {};\n\n        if (value === null || typeof value !== 'object') {\n            options = value;\n        } else {\n            ko.utils.objectForEach(value, function (propertyName, propertyValue) {\n                options[propertyName] = ko.unwrap(propertyValue);\n            });\n        }\n\n        if (typeof options !== 'object') {\n            options = { title: value }\n        }\n\n        var tooltipData = $element.data('bs.tooltip');\n\n        if (!tooltipData) {\n            $element.tooltip(options);\n        } else {\n            ko.utils.extend(tooltipData.options, options);\n        }\n    }\n};\n\n\nko.bindingHandlers.fadeVisible = {\n    init: function (element, valueAccessor) {\n        // Initially set the element to be instantly visible/hidden depending on the value\n        var value = valueAccessor();\n        $(element).toggle(ko.unwrap(value)); // Use \"unwrapObservable\" so we can handle values that may or may not be observable\n    },\n    update: function (element, valueAccessor) {\n        // Whenever the value subsequently changes, slowly fade the element in or out\n        var value = valueAccessor();\n        ko.unwrap(value) ? $(element).fadeIn() : $(element).fadeOut();\n    }\n};\n\nko.bindingHandlers.slideVisible = {\n    init: function (element, valueAccessor) {\n        // Initially set the element to be instantly visible/hidden depending on the value\n        var value = valueAccessor();\n        $(element).toggle(ko.unwrap(value)); // Use \"unwrapObservable\" so we can handle values that may or may not be observable\n    },\n    update: function (element, valueAccessor) {\n        // Whenever the value subsequently changes, slowly fade the element in or out\n        var value = valueAccessor();\n        ko.unwrap(value) ? $(element).slideDown() : $(element).slideUp();\n    }\n};\n\nko.bindingHandlers.booleanValue = {\n    init: function (element, valueAccessor, allBindingsAccessor) {\n        var observable = valueAccessor(),\n            interceptor = ko.computed({\n                read: function () {\n                    return observable().toString();\n                },\n                write: function (newValue) {\n                    observable(newValue === \"true\");\n                }\n            });\n\n        ko.applyBindingsToNode(element, { value: interceptor });\n    }\n};\n\nko.bindingHandlers.formatNumberText = {\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var phone = ko.utils.unwrapObservable(valueAccessor());\n        var formatPhone = function () {\n            return phone.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"($1) $2-$3\");\n        }\n        ko.bindingHandlers.text.update(element, formatPhone, allBindings, viewModel, bindingContext);\n    }\n};\n\n// http://xion.io/post/code/knockout-let-binding.html\nko.bindingHandlers['let'] = {\n    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var innerContext = bindingContext.extend(valueAccessor);\n        ko.applyBindingsToDescendants(innerContext, element);\n        return { controlsDescendantBindings: true };\n    }\n};\nko.virtualElements.allowedBindings['let'] = true;\n\n\n// Used from grahampcharles \n// https://github.com/grahampcharles/moment-knockout/\n\n\n(function () {\n\n    ko.bindingHandlers.moment = {\n\n        defaults: {\n            invalid: '',\n            format: 'MM/DD/YYYY'\n        },\n\n        init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n\n            var allBindings = allBindingsAccessor();\n\n            // register change event\n            ko.utils.registerEventHandler(element, 'change', function () {\n\n                var observable = valueAccessor();\n                var val = moment($(element).val());\n\n                observable(val);\n\n            });\n        },\n\n        update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n\n            var value = valueAccessor(),\n                allBindings = allBindingsAccessor(),\n                valueUnwrapped = ko.utils.unwrapObservable(value);\n\n            // Date formats: http://momentjs.com/docs/#/displaying/format/\n            var pattern = allBindings.format || ko.bindingHandlers.moment.defaults.format;\n            var invalidString = allBindings.invalid == undefined ? ko.bindingHandlers.moment.defaults.invalid : allBindings.invalid;\n\n            var dateMoment = moment(valueUnwrapped);\n\n            // format string for input box\n            var output = dateMoment.isValid() ?\n                dateMoment.format(pattern) :\n                invalidString;\n\n            if ($(element).is(\"input\") === true) {\n                $(element).val(output);\n            } else {\n                $(element).text(output);\n            }\n\n        }\n    };\n\n\n\n\n\n\n\n    ko.bindingHandlers.momentFromNow = {\n\n        defaults: {\n            invalid: '',\n        },\n\n        init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n\n            var allBindings = allBindingsAccessor();\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n                clearInterval(element.koFromNowTimer);\n            });\n        },\n\n        update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n\n            var value = valueAccessor(),\n                allBindings = allBindingsAccessor(),\n                valueUnwrapped = ko.utils.unwrapObservable(value);\n\n            // Date formats: http://momentjs.com/docs/#/displaying/format/\n            var invalidString = allBindings.invalid == undefined ? ko.bindingHandlers.moment.defaults.invalid : allBindings.invalid;\n            var shorten = allBindings.shorten == undefined ? false : allBindings.shorten;\n\n            var dateMoment = moment(valueUnwrapped);\n\n            var fmt = () => {\n                var output = dateMoment.isValid() ?\n                    dateMoment.fromNow() :\n                    invalidString;\n\n                if (shorten) {\n                    output = output.replace(\"minutes\", \"mins\");\n                    output = output.replace(\"a few seconds\", \"a moment\");\n                }\n                return output;\n            }\n\n            $(element).text(fmt());\n\n            clearInterval(element.koFromNowTimer);\n            element.koFromNowTimer = setInterval(function () {\n\n                $(element).text(fmt());\n            }, 1000);\n\n        }\n    };\n} ());","\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\n// Knockout View Model for: ApplicationUser\n// Generated by IntelliTect.Coalesce\n\nmodule ViewModels {\n\n\texport class ApplicationUser extends Coalesce.BaseViewModel\n    {\n        public readonly modelName = \"ApplicationUser\";\n        public readonly primaryKeyName: keyof this = \"applicationUserId\";\n        public readonly modelDisplayName = \"Application User\";\n        public readonly apiController = \"/ApplicationUser\";\n        public readonly viewController = \"/ApplicationUser\";\n\n        /** Behavioral configuration for all instances of ApplicationUser. Can be overidden on each instance via instance.coalesceConfig. */\n        public static coalesceConfig: Coalesce.ViewModelConfiguration<ApplicationUser>\n            = new Coalesce.ViewModelConfiguration<ApplicationUser>(Coalesce.GlobalConfiguration.viewModel);\n\n        /** Behavioral configuration for the current ApplicationUser instance. */\n        public coalesceConfig: Coalesce.ViewModelConfiguration<this>\n            = new Coalesce.ViewModelConfiguration<ApplicationUser>(ApplicationUser.coalesceConfig);\n    \n        /** \n            The namespace containing all possible values of this.dataSource.\n        */\n        public dataSources: typeof ListViewModels.ApplicationUserDataSources = ListViewModels.ApplicationUserDataSources;\n    \n\n        public applicationUserId: KnockoutObservable<number> = ko.observable(null);\n        public name: KnockoutObservable<string> = ko.observable(null);\n        public id: KnockoutObservable<string> = ko.observable(null);\n        public userName: KnockoutObservable<string> = ko.observable(null);\n        public normalizedUserName: KnockoutObservable<string> = ko.observable(null);\n        public email: KnockoutObservable<string> = ko.observable(null);\n        public normalizedEmail: KnockoutObservable<string> = ko.observable(null);\n        public emailConfirmed: KnockoutObservable<boolean> = ko.observable(null);\n        public passwordHash: KnockoutObservable<string> = ko.observable(null);\n        public securityStamp: KnockoutObservable<string> = ko.observable(null);\n        public concurrencyStamp: KnockoutObservable<string> = ko.observable(null);\n        public phoneNumber: KnockoutObservable<string> = ko.observable(null);\n        public phoneNumberConfirmed: KnockoutObservable<boolean> = ko.observable(null);\n        public twoFactorEnabled: KnockoutObservable<boolean> = ko.observable(null);\n        public lockoutEnd: KnockoutObservable<moment.Moment> = ko.observable(null);\n        public lockoutEnabled: KnockoutObservable<boolean> = ko.observable(null);\n        public accessFailedCount: KnockoutObservable<number> = ko.observable(null);\n\n       \n        \n\n\n\n\n\n\n        /** \n            Load the ViewModel object from the DTO. \n            @param force: Will override the check against isLoading that is done to prevent recursion. False is default.\n            @param allowCollectionDeletes: Set true when entire collections are loaded. True is the default. In some cases only a partial collection is returned, set to false to only add/update collections.\n        */\n        public loadFromDto = (data: any, force: boolean = false, allowCollectionDeletes: boolean = true): void => {\n            if (!data || (!force && this.isLoading())) return;\n            this.isLoading(true);\n            // Set the ID \n            this.myId = data.applicationUserId;\n            this.applicationUserId(data.applicationUserId);\n            // Load the lists of other objects\n            // Objects are loaded first so that they are available when the IDs get loaded.\n            // This handles the issue with populating select lists with correct data because we now have the object.\n\n            // The rest of the objects are loaded now.\n            this.name(data.name);\n            this.userName(data.userName);\n            this.normalizedUserName(data.normalizedUserName);\n            this.email(data.email);\n            this.normalizedEmail(data.normalizedEmail);\n            this.emailConfirmed(data.emailConfirmed);\n            this.passwordHash(data.passwordHash);\n            this.securityStamp(data.securityStamp);\n            this.concurrencyStamp(data.concurrencyStamp);\n            this.phoneNumber(data.phoneNumber);\n            this.phoneNumberConfirmed(data.phoneNumberConfirmed);\n            this.twoFactorEnabled(data.twoFactorEnabled);\n            if (data.lockoutEnd == null) this.lockoutEnd(null);\n            else if (this.lockoutEnd() == null || this.lockoutEnd().valueOf() != new Date(data.lockoutEnd).getTime()){\n                this.lockoutEnd(moment(new Date(data.lockoutEnd)));\n            }\n            this.lockoutEnabled(data.lockoutEnabled);\n            this.accessFailedCount(data.accessFailedCount);\n            if (this.coalesceConfig.onLoadFromDto()){\n                this.coalesceConfig.onLoadFromDto()(this as any);\n            }\n            this.isLoading(false);\n            this.isDirty(false);\n    \n            if (this.coalesceConfig.validateOnLoadFromDto()) this.validate();\n        };\n    \n        /** Saves this object into a data transfer object to send to the server. */\r\n        public saveToDto = (): any => {\r\n            var dto: any = {};\r\n            dto.applicationUserId = this.applicationUserId();\r\n            \r\n            dto.name = this.name();\r\n            dto.userName = this.userName();\r\n            dto.normalizedUserName = this.normalizedUserName();\r\n            dto.email = this.email();\r\n            dto.normalizedEmail = this.normalizedEmail();\r\n            dto.emailConfirmed = this.emailConfirmed();\r\n            dto.passwordHash = this.passwordHash();\r\n            dto.securityStamp = this.securityStamp();\r\n            dto.concurrencyStamp = this.concurrencyStamp();\r\n            dto.phoneNumber = this.phoneNumber();\r\n            dto.phoneNumberConfirmed = this.phoneNumberConfirmed();\r\n            dto.twoFactorEnabled = this.twoFactorEnabled();\r\n            if (!this.lockoutEnd()) dto.lockoutEnd = null;\r\n            else dto.lockoutEnd = this.lockoutEnd().format('YYYY-MM-DDTHH:mm:ssZZ');\r\n            dto.lockoutEnabled = this.lockoutEnabled();\r\n            dto.accessFailedCount = this.accessFailedCount();\r\n            \r\n            return dto;\r\n        }\r\n\n        /**\n            Loads any child objects that have an ID set, but not the full object.\n            This is useful when creating an object that has a parent object and the ID is set on the new child.\n        */\n        public loadChildren = (callback?: () => void): void => {\n            var loadingCount = 0;\n            if (loadingCount == 0 && typeof(callback) == \"function\"){\n                callback();\n            }\n        };\n        \n        public setupValidation = (): void => {\n            if (this.errors !== null) return;\n            this.errors = ko.validation.group([\n                this.lockoutEnd.extend({ moment: { unix: true } }),\n            ]);\n            this.warnings = ko.validation.group([\n            ]);\n        }\n    \n        // Computed Observable for edit URL\n        public editUrl: KnockoutComputed<string> = ko.pureComputed(() => {\n            return this.coalesceConfig.baseViewUrl() + this.viewController + \"/CreateEdit?id=\" + this.applicationUserId();\n        });\n\n        constructor(newItem?: object, parent?: Coalesce.BaseViewModel | ListViewModels.ApplicationUserList){\n            super(parent);\n            this.baseInitialize();\n            var self = this;\n            self.myId;\n\n            // Create computeds for display for objects\n\n    \n\n\n\n            // This stuff needs to be done after everything else is set up.\n            self.name.subscribe(self.autoSave);\n            self.userName.subscribe(self.autoSave);\n            self.normalizedUserName.subscribe(self.autoSave);\n            self.email.subscribe(self.autoSave);\n            self.normalizedEmail.subscribe(self.autoSave);\n            self.emailConfirmed.subscribe(self.autoSave);\n            self.passwordHash.subscribe(self.autoSave);\n            self.securityStamp.subscribe(self.autoSave);\n            self.concurrencyStamp.subscribe(self.autoSave);\n            self.phoneNumber.subscribe(self.autoSave);\n            self.phoneNumberConfirmed.subscribe(self.autoSave);\n            self.twoFactorEnabled.subscribe(self.autoSave);\n            self.lockoutEnd.subscribe(self.autoSave);\n            self.lockoutEnabled.subscribe(self.autoSave);\n            self.accessFailedCount.subscribe(self.autoSave);\n        \n            if (newItem) {\n                self.loadFromDto(newItem, true);\n            }\n        }\n    }\n\n\n\n\n\n    export namespace ApplicationUser {\n    }\n}","\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\n// Knockout List View Model for: ApplicationUser\n// Generated by IntelliTect.Coalesce\n\nmodule ListViewModels {\n\n    export namespace ApplicationUserDataSources {\n        export class Default extends Coalesce.DataSource<ViewModels.ApplicationUser> { }\n            }\n\n    export class ApplicationUserList extends Coalesce.BaseListViewModel<ViewModels.ApplicationUser> {\n        public readonly modelName: string = \"ApplicationUser\";\n        public readonly apiController: string = \"/ApplicationUser\";\n        public modelKeyName: string = \"applicationUserId\";\n        public itemClass: new () => ViewModels.ApplicationUser = ViewModels.ApplicationUser;\n\n        public filter: {\n            applicationUserId?:string;\r\n            name?:string;\r\n            id?:string;\r\n            userName?:string;\r\n            normalizedUserName?:string;\r\n            email?:string;\r\n            normalizedEmail?:string;\r\n            emailConfirmed?:string;\r\n            passwordHash?:string;\r\n            securityStamp?:string;\r\n            concurrencyStamp?:string;\r\n            phoneNumber?:string;\r\n            phoneNumberConfirmed?:string;\r\n            twoFactorEnabled?:string;\r\n            lockoutEnd?:string;\r\n            lockoutEnabled?:string;\r\n            accessFailedCount?:string;\n        } = null;\n    \n        /** \n            The namespace containing all possible values of this.dataSource.\n        */\n        public dataSources: typeof ApplicationUserDataSources = ApplicationUserDataSources;\n\n        /**\n            The data source on the server to use when retrieving objects.\n            Valid values are in this.dataSources.\n        */\n        public dataSource: Coalesce.DataSource<ViewModels.ApplicationUser> = new this.dataSources.Default();\n\n        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<ApplicationUserList, ViewModels.ApplicationUser>(Coalesce.GlobalConfiguration.listViewModel);\n        public coalesceConfig: Coalesce.ListViewModelConfiguration<ApplicationUserList, ViewModels.ApplicationUser>\n            = new Coalesce.ListViewModelConfiguration<ApplicationUserList, ViewModels.ApplicationUser>(ApplicationUserList.coalesceConfig);\n\n\n        protected createItem = (newItem?: any, parent?: any) => new ViewModels.ApplicationUser(newItem, parent);\n\n        constructor() {\n            super();\n        }\n    }\n}","\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\n// Knockout View Model for: CallSign\n// Generated by IntelliTect.Coalesce\n\nmodule ViewModels {\n\n\texport class CallSign extends Coalesce.BaseViewModel\n    {\n        public readonly modelName = \"CallSign\";\n        public readonly primaryKeyName: keyof this = \"callSignId\";\n        public readonly modelDisplayName = \"Call Sign\";\n        public readonly apiController = \"/CallSign\";\n        public readonly viewController = \"/CallSign\";\n\n        /** Behavioral configuration for all instances of CallSign. Can be overidden on each instance via instance.coalesceConfig. */\n        public static coalesceConfig: Coalesce.ViewModelConfiguration<CallSign>\n            = new Coalesce.ViewModelConfiguration<CallSign>(Coalesce.GlobalConfiguration.viewModel);\n\n        /** Behavioral configuration for the current CallSign instance. */\n        public coalesceConfig: Coalesce.ViewModelConfiguration<this>\n            = new Coalesce.ViewModelConfiguration<CallSign>(CallSign.coalesceConfig);\n    \n        /** \n            The namespace containing all possible values of this.dataSource.\n        */\n        public dataSources: typeof ListViewModels.CallSignDataSources = ListViewModels.CallSignDataSources;\n    \n\n        public callSignId: KnockoutObservable<number> = ko.observable(null);\n        public text: KnockoutObservable<string> = ko.observable(null);\n        public logEntries: KnockoutObservableArray<ViewModels.LogEntry> = ko.observableArray([]);\n\n       \n        \n\n        /** Add object to logEntries */\n        public addToLogEntries = (autoSave?: boolean | null): LogEntry => {\n            var newItem = new LogEntry();\n            if (typeof(autoSave) == 'boolean'){\n                newItem.coalesceConfig.autoSaveEnabled(autoSave);\n            }\n            newItem.parent = this;\n            newItem.parentCollection = this.logEntries;\n            newItem.isExpanded(true);\n            newItem.callSignId(this.callSignId());\n            this.logEntries.push(newItem);\n            return newItem;\n        };\n\n        /** ListViewModel for LogEntries. Allows for loading subsets of data. */\n        public logEntriesList: (loadImmediate?: boolean) => ListViewModels.LogEntryList;\n        \n        /** Url for a table view of all members of collection LogEntries for the current object. */\n        public logEntriesListUrl: KnockoutComputed<string> = ko.computed(\n            () => this.coalesceConfig.baseViewUrl() + '/LogEntry/Table?filter.callSignId=' + this.callSignId(),\n            null, { deferEvaluation: true }\n        );\n\n\n\n\n\n        /** \n            Load the ViewModel object from the DTO. \n            @param force: Will override the check against isLoading that is done to prevent recursion. False is default.\n            @param allowCollectionDeletes: Set true when entire collections are loaded. True is the default. In some cases only a partial collection is returned, set to false to only add/update collections.\n        */\n        public loadFromDto = (data: any, force: boolean = false, allowCollectionDeletes: boolean = true): void => {\n            if (!data || (!force && this.isLoading())) return;\n            this.isLoading(true);\n            // Set the ID \n            this.myId = data.callSignId;\n            this.callSignId(data.callSignId);\n            // Load the lists of other objects\n            if (data.logEntries != null) {\n                // Merge the incoming array\n                Coalesce.KnockoutUtilities.RebuildArray(this.logEntries, data.logEntries, 'logEntryId', LogEntry, this, allowCollectionDeletes);\n            } \n            // Objects are loaded first so that they are available when the IDs get loaded.\n            // This handles the issue with populating select lists with correct data because we now have the object.\n\n            // The rest of the objects are loaded now.\n            this.text(data.text);\n            if (this.coalesceConfig.onLoadFromDto()){\n                this.coalesceConfig.onLoadFromDto()(this as any);\n            }\n            this.isLoading(false);\n            this.isDirty(false);\n    \n            if (this.coalesceConfig.validateOnLoadFromDto()) this.validate();\n        };\n    \n        /** Saves this object into a data transfer object to send to the server. */\r\n        public saveToDto = (): any => {\r\n            var dto: any = {};\r\n            dto.callSignId = this.callSignId();\r\n            \r\n            dto.text = this.text();\r\n            \r\n            return dto;\r\n        }\r\n\n        /**\n            Loads any child objects that have an ID set, but not the full object.\n            This is useful when creating an object that has a parent object and the ID is set on the new child.\n        */\n        public loadChildren = (callback?: () => void): void => {\n            var loadingCount = 0;\n            if (loadingCount == 0 && typeof(callback) == \"function\"){\n                callback();\n            }\n        };\n        \n        public setupValidation = (): void => {\n            if (this.errors !== null) return;\n            this.errors = ko.validation.group([\n            ]);\n            this.warnings = ko.validation.group([\n            ]);\n        }\n    \n        // Computed Observable for edit URL\n        public editUrl: KnockoutComputed<string> = ko.pureComputed(() => {\n            return this.coalesceConfig.baseViewUrl() + this.viewController + \"/CreateEdit?id=\" + this.callSignId();\n        });\n\n        constructor(newItem?: object, parent?: Coalesce.BaseViewModel | ListViewModels.CallSignList){\n            super(parent);\n            this.baseInitialize();\n            var self = this;\n            self.myId;\n\n            // Create computeds for display for objects\n\n    \n            // List Object model for LogEntries. Allows for loading subsets of data.\n            var _logEntriesList: ListViewModels.LogEntryList = null;\n            self.logEntriesList = function(loadImmediate = true) {\n                if (!_logEntriesList){\n                    _logEntriesList = new ListViewModels.LogEntryList();\n                    if (loadImmediate) loadLogEntriesList();\n                    self.callSignId.subscribe(loadLogEntriesList)\n                }\n                return _logEntriesList;\n            }\n            function loadLogEntriesList() {\n                if (self.callSignId()){\n                    _logEntriesList.queryString = \"filter.CallSignId=\" + self.callSignId();\n                    _logEntriesList.load();\n                }\n            }\n\n\n\n            // This stuff needs to be done after everything else is set up.\n            self.text.subscribe(self.autoSave);\n        \n            if (newItem) {\n                self.loadFromDto(newItem, true);\n            }\n        }\n    }\n\n\n\n\n\n    export namespace CallSign {\n    }\n}","\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\n// Knockout List View Model for: CallSign\n// Generated by IntelliTect.Coalesce\n\nmodule ListViewModels {\n\n    export namespace CallSignDataSources {\n        export class Default extends Coalesce.DataSource<ViewModels.CallSign> { }\n            }\n\n    export class CallSignList extends Coalesce.BaseListViewModel<ViewModels.CallSign> {\n        public readonly modelName: string = \"CallSign\";\n        public readonly apiController: string = \"/CallSign\";\n        public modelKeyName: string = \"callSignId\";\n        public itemClass: new () => ViewModels.CallSign = ViewModels.CallSign;\n\n        public filter: {\n            callSignId?:string;\r\n            text?:string;\n        } = null;\n    \n        /** \n            The namespace containing all possible values of this.dataSource.\n        */\n        public dataSources: typeof CallSignDataSources = CallSignDataSources;\n\n        /**\n            The data source on the server to use when retrieving objects.\n            Valid values are in this.dataSources.\n        */\n        public dataSource: Coalesce.DataSource<ViewModels.CallSign> = new this.dataSources.Default();\n\n        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<CallSignList, ViewModels.CallSign>(Coalesce.GlobalConfiguration.listViewModel);\n        public coalesceConfig: Coalesce.ListViewModelConfiguration<CallSignList, ViewModels.CallSign>\n            = new Coalesce.ListViewModelConfiguration<CallSignList, ViewModels.CallSign>(CallSignList.coalesceConfig);\n\n\n        protected createItem = (newItem?: any, parent?: any) => new ViewModels.CallSign(newItem, parent);\n\n        constructor() {\n            super();\n        }\n    }\n}","\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\n// Knockout View Model for: LogEntry\n// Generated by IntelliTect.Coalesce\n\nmodule ViewModels {\n\n\texport class LogEntry extends Coalesce.BaseViewModel\n    {\n        public readonly modelName = \"LogEntry\";\n        public readonly primaryKeyName: keyof this = \"logEntryId\";\n        public readonly modelDisplayName = \"Log Entry\";\n        public readonly apiController = \"/LogEntry\";\n        public readonly viewController = \"/LogEntry\";\n\n        /** Behavioral configuration for all instances of LogEntry. Can be overidden on each instance via instance.coalesceConfig. */\n        public static coalesceConfig: Coalesce.ViewModelConfiguration<LogEntry>\n            = new Coalesce.ViewModelConfiguration<LogEntry>(Coalesce.GlobalConfiguration.viewModel);\n\n        /** Behavioral configuration for the current LogEntry instance. */\n        public coalesceConfig: Coalesce.ViewModelConfiguration<this>\n            = new Coalesce.ViewModelConfiguration<LogEntry>(LogEntry.coalesceConfig);\n    \n        /** \n            The namespace containing all possible values of this.dataSource.\n        */\n        public dataSources: typeof ListViewModels.LogEntryDataSources = ListViewModels.LogEntryDataSources;\n    \n\n        public logEntryId: KnockoutObservable<number> = ko.observable(null);\n        public callSignId: KnockoutObservable<number> = ko.observable(null);\n        public callSign: KnockoutObservable<ViewModels.CallSign> = ko.observable(null);\n        public entryDateTime: KnockoutObservable<moment.Moment> = ko.observable(moment());\n        public entry: KnockoutObservable<string> = ko.observable(null);\n        public serverId: KnockoutObservable<number> = ko.observable(null);\n        public server: KnockoutObservable<ViewModels.Server> = ko.observable(null);\n\n       \n        /** Display text for CallSign */\n        public callSignText: KnockoutComputed<string>;\n        /** Display text for Server */\n        public serverText: KnockoutComputed<string>;\n        \n\n\n        /** Pops up a stock editor for object callSign */\n        public showCallSignEditor: (callback?: any) => void;\n        /** Pops up a stock editor for object server */\n        public showServerEditor: (callback?: any) => void;\n\n\n\n\n        /** \n            Load the ViewModel object from the DTO. \n            @param force: Will override the check against isLoading that is done to prevent recursion. False is default.\n            @param allowCollectionDeletes: Set true when entire collections are loaded. True is the default. In some cases only a partial collection is returned, set to false to only add/update collections.\n        */\n        public loadFromDto = (data: any, force: boolean = false, allowCollectionDeletes: boolean = true): void => {\n            if (!data || (!force && this.isLoading())) return;\n            this.isLoading(true);\n            // Set the ID \n            this.myId = data.logEntryId;\n            this.logEntryId(data.logEntryId);\n            // Load the lists of other objects\n            // Objects are loaded first so that they are available when the IDs get loaded.\n            // This handles the issue with populating select lists with correct data because we now have the object.\n            if (!data.callSign) { \n                if (data.callSignId != this.callSignId()) {\n                    this.callSign(null);\n                }\n            } else {\n                if (!this.callSign()){\n                    this.callSign(new CallSign(data.callSign, this));\n                } else {\n                    this.callSign().loadFromDto(data.callSign);\n                }\n                if (this.parent instanceof CallSign && this.parent !== this.callSign() && this.parent.callSignId() == this.callSign().callSignId())\n                {\n                    this.parent.loadFromDto(data.callSign, null, false);\n                }\n            }\n            if (!data.server) { \n                if (data.serverId != this.serverId()) {\n                    this.server(null);\n                }\n            } else {\n                if (!this.server()){\n                    this.server(new Server(data.server, this));\n                } else {\n                    this.server().loadFromDto(data.server);\n                }\n                if (this.parent instanceof Server && this.parent !== this.server() && this.parent.serverId() == this.server().serverId())\n                {\n                    this.parent.loadFromDto(data.server, null, false);\n                }\n            }\n\n            // The rest of the objects are loaded now.\n            this.callSignId(data.callSignId);\n            if (data.entryDateTime == null) this.entryDateTime(null);\n            else if (this.entryDateTime() == null || this.entryDateTime().valueOf() != new Date(data.entryDateTime).getTime()){\n                this.entryDateTime(moment(new Date(data.entryDateTime)));\n            }\n            this.entry(data.entry);\n            this.serverId(data.serverId);\n            if (this.coalesceConfig.onLoadFromDto()){\n                this.coalesceConfig.onLoadFromDto()(this as any);\n            }\n            this.isLoading(false);\n            this.isDirty(false);\n    \n            if (this.coalesceConfig.validateOnLoadFromDto()) this.validate();\n        };\n    \n        /** Saves this object into a data transfer object to send to the server. */\r\n        public saveToDto = (): any => {\r\n            var dto: any = {};\r\n            dto.logEntryId = this.logEntryId();\r\n            \r\n            dto.callSignId = this.callSignId();\r\n            if (!dto.callSignId && this.callSign()) {\r\n                dto.callSignId = this.callSign().callSignId();\r\n            }\r\n            if (!this.entryDateTime()) dto.entryDateTime = null;\r\n            else dto.entryDateTime = this.entryDateTime().format('YYYY-MM-DDTHH:mm:ss');\r\n            dto.entry = this.entry();\r\n            dto.serverId = this.serverId();\r\n            if (!dto.serverId && this.server()) {\r\n                dto.serverId = this.server().serverId();\r\n            }\r\n            \r\n            return dto;\r\n        }\r\n\n        /**\n            Loads any child objects that have an ID set, but not the full object.\n            This is useful when creating an object that has a parent object and the ID is set on the new child.\n        */\n        public loadChildren = (callback?: () => void): void => {\n            var loadingCount = 0;\n            // See if this.callSign needs to be loaded.\n            if (this.callSign() == null && this.callSignId() != null){\n                loadingCount++;\n                var callSignObj = new CallSign();\n                callSignObj.load(this.callSignId(), () => {\n                    loadingCount--;\n                    this.callSign(callSignObj);\n                    if (loadingCount == 0 && typeof(callback) == \"function\"){\n                        callback();\n                    }\n                });\n            }\n            // See if this.server needs to be loaded.\n            if (this.server() == null && this.serverId() != null){\n                loadingCount++;\n                var serverObj = new Server();\n                serverObj.load(this.serverId(), () => {\n                    loadingCount--;\n                    this.server(serverObj);\n                    if (loadingCount == 0 && typeof(callback) == \"function\"){\n                        callback();\n                    }\n                });\n            }\n            if (loadingCount == 0 && typeof(callback) == \"function\"){\n                callback();\n            }\n        };\n        \n        public setupValidation = (): void => {\n            if (this.errors !== null) return;\n            this.errors = ko.validation.group([\n                this.callSignId.extend({ required: {params: true, message: \"Call Sign is required.\"} }),\n                this.entryDateTime.extend({ moment: { unix: true } }),\n                this.serverId.extend({ required: {params: true, message: \"Server is required.\"} }),\n            ]);\n            this.warnings = ko.validation.group([\n            ]);\n        }\n    \n        // Computed Observable for edit URL\n        public editUrl: KnockoutComputed<string> = ko.pureComputed(() => {\n            return this.coalesceConfig.baseViewUrl() + this.viewController + \"/CreateEdit?id=\" + this.logEntryId();\n        });\n\n        constructor(newItem?: object, parent?: Coalesce.BaseViewModel | ListViewModels.LogEntryList){\n            super(parent);\n            this.baseInitialize();\n            var self = this;\n            self.myId;\n\n            // Create computeds for display for objects\n\t\t\tself.callSignText = ko.pureComputed(function()\n\t\t\t{   // If the object exists, use the text value. Otherwise show 'None'\n\t\t\t\tif (self.callSign() && self.callSign().text()) {\n\t\t\t\t\treturn self.callSign().text().toString();\n\t\t\t\t} else {\n\t\t\t\t\treturn \"None\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.serverText = ko.pureComputed(function()\n\t\t\t{   // If the object exists, use the text value. Otherwise show 'None'\n\t\t\t\tif (self.server() && self.server().serverSearchString()) {\n\t\t\t\t\treturn self.server().serverSearchString().toString();\n\t\t\t\t} else {\n\t\t\t\t\treturn \"None\";\n\t\t\t\t}\n\t\t\t});\n\n    \n\n\n            self.showCallSignEditor = function(callback: any) {\n                if (!self.callSign()) {\n                    self.callSign(new CallSign());\n                }\n                self.callSign().showEditor(callback)\n            };\n            self.showServerEditor = function(callback: any) {\n                if (!self.server()) {\n                    self.server(new Server());\n                }\n                self.server().showEditor(callback)\n            };\n\n            // This stuff needs to be done after everything else is set up.\n            self.callSignId.subscribe(self.autoSave);\n            self.callSign.subscribe(self.autoSave);\n            self.entryDateTime.subscribe(self.autoSave);\n            self.entry.subscribe(self.autoSave);\n            self.serverId.subscribe(self.autoSave);\n            self.server.subscribe(self.autoSave);\n        \n            if (newItem) {\n                self.loadFromDto(newItem, true);\n            }\n        }\n    }\n\n\n\n\n\n    export namespace LogEntry {\n    }\n}","\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\n// Knockout List View Model for: LogEntry\n// Generated by IntelliTect.Coalesce\n\nmodule ListViewModels {\n\n    export namespace LogEntryDataSources {\n        export class Default extends Coalesce.DataSource<ViewModels.LogEntry> { }\n                \n        export class OnlineLogs extends Coalesce.DataSource<ViewModels.LogEntry> {\n        }\n        \n        export class OfflineLogs extends Coalesce.DataSource<ViewModels.LogEntry> {\n        }\n    }\n\n    export class LogEntryList extends Coalesce.BaseListViewModel<ViewModels.LogEntry> {\n        public readonly modelName: string = \"LogEntry\";\n        public readonly apiController: string = \"/LogEntry\";\n        public modelKeyName: string = \"logEntryId\";\n        public itemClass: new () => ViewModels.LogEntry = ViewModels.LogEntry;\n\n        public filter: {\n            logEntryId?:string;\r\n            callSignId?:string;\r\n            entryDateTime?:string;\r\n            entry?:string;\r\n            serverId?:string;\n        } = null;\n    \n        /** \n            The namespace containing all possible values of this.dataSource.\n        */\n        public dataSources: typeof LogEntryDataSources = LogEntryDataSources;\n\n        /**\n            The data source on the server to use when retrieving objects.\n            Valid values are in this.dataSources.\n        */\n        public dataSource: Coalesce.DataSource<ViewModels.LogEntry> = new this.dataSources.Default();\n\n        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<LogEntryList, ViewModels.LogEntry>(Coalesce.GlobalConfiguration.listViewModel);\n        public coalesceConfig: Coalesce.ListViewModelConfiguration<LogEntryList, ViewModels.LogEntry>\n            = new Coalesce.ListViewModelConfiguration<LogEntryList, ViewModels.LogEntry>(LogEntryList.coalesceConfig);\n\n\n        protected createItem = (newItem?: any, parent?: any) => new ViewModels.LogEntry(newItem, parent);\n\n        constructor() {\n            super();\n        }\n    }\n}","\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\n// Knockout View Model for: Server\n// Generated by IntelliTect.Coalesce\n\nmodule ViewModels {\n\n\texport class Server extends Coalesce.BaseViewModel\n    {\n        public readonly modelName = \"Server\";\n        public readonly primaryKeyName: keyof this = \"serverId\";\n        public readonly modelDisplayName = \"Server\";\n        public readonly apiController = \"/Server\";\n        public readonly viewController = \"/Server\";\n\n        /** Behavioral configuration for all instances of Server. Can be overidden on each instance via instance.coalesceConfig. */\n        public static coalesceConfig: Coalesce.ViewModelConfiguration<Server>\n            = new Coalesce.ViewModelConfiguration<Server>(Coalesce.GlobalConfiguration.viewModel);\n\n        /** Behavioral configuration for the current Server instance. */\n        public coalesceConfig: Coalesce.ViewModelConfiguration<this>\n            = new Coalesce.ViewModelConfiguration<Server>(Server.coalesceConfig);\n    \n        /** \n            The namespace containing all possible values of this.dataSource.\n        */\n        public dataSources: typeof ListViewModels.ServerDataSources = ListViewModels.ServerDataSources;\n    \n\n        public serverId: KnockoutObservable<number> = ko.observable(null);\n        public logFileLocation: KnockoutObservable<string> = ko.observable(null);\n        public serverSearchString: KnockoutObservable<string> = ko.observable(null);\n        public logEntries: KnockoutObservableArray<ViewModels.LogEntry> = ko.observableArray([]);\n        public orderBy: KnockoutObservable<number> = ko.observable(null);\n\n       \n        \n\n        /** Add object to logEntries */\n        public addToLogEntries = (autoSave?: boolean | null): LogEntry => {\n            var newItem = new LogEntry();\n            if (typeof(autoSave) == 'boolean'){\n                newItem.coalesceConfig.autoSaveEnabled(autoSave);\n            }\n            newItem.parent = this;\n            newItem.parentCollection = this.logEntries;\n            newItem.isExpanded(true);\n            newItem.serverId(this.serverId());\n            this.logEntries.push(newItem);\n            return newItem;\n        };\n\n        /** ListViewModel for LogEntries. Allows for loading subsets of data. */\n        public logEntriesList: (loadImmediate?: boolean) => ListViewModels.LogEntryList;\n        \n        /** Url for a table view of all members of collection LogEntries for the current object. */\n        public logEntriesListUrl: KnockoutComputed<string> = ko.computed(\n            () => this.coalesceConfig.baseViewUrl() + '/LogEntry/Table?filter.serverId=' + this.serverId(),\n            null, { deferEvaluation: true }\n        );\n\n\n\n\n\n        /** \n            Load the ViewModel object from the DTO. \n            @param force: Will override the check against isLoading that is done to prevent recursion. False is default.\n            @param allowCollectionDeletes: Set true when entire collections are loaded. True is the default. In some cases only a partial collection is returned, set to false to only add/update collections.\n        */\n        public loadFromDto = (data: any, force: boolean = false, allowCollectionDeletes: boolean = true): void => {\n            if (!data || (!force && this.isLoading())) return;\n            this.isLoading(true);\n            // Set the ID \n            this.myId = data.serverId;\n            this.serverId(data.serverId);\n            // Load the lists of other objects\n            if (data.logEntries != null) {\n                // Merge the incoming array\n                Coalesce.KnockoutUtilities.RebuildArray(this.logEntries, data.logEntries, 'logEntryId', LogEntry, this, allowCollectionDeletes);\n            } \n            // Objects are loaded first so that they are available when the IDs get loaded.\n            // This handles the issue with populating select lists with correct data because we now have the object.\n\n            // The rest of the objects are loaded now.\n            this.logFileLocation(data.logFileLocation);\n            this.serverSearchString(data.serverSearchString);\n            this.orderBy(data.orderBy);\n            if (this.coalesceConfig.onLoadFromDto()){\n                this.coalesceConfig.onLoadFromDto()(this as any);\n            }\n            this.isLoading(false);\n            this.isDirty(false);\n    \n            if (this.coalesceConfig.validateOnLoadFromDto()) this.validate();\n        };\n    \n        /** Saves this object into a data transfer object to send to the server. */\r\n        public saveToDto = (): any => {\r\n            var dto: any = {};\r\n            dto.serverId = this.serverId();\r\n            \r\n            dto.logFileLocation = this.logFileLocation();\r\n            dto.serverSearchString = this.serverSearchString();\r\n            dto.orderBy = this.orderBy();\r\n            \r\n            return dto;\r\n        }\r\n\n        /**\n            Loads any child objects that have an ID set, but not the full object.\n            This is useful when creating an object that has a parent object and the ID is set on the new child.\n        */\n        public loadChildren = (callback?: () => void): void => {\n            var loadingCount = 0;\n            if (loadingCount == 0 && typeof(callback) == \"function\"){\n                callback();\n            }\n        };\n        \n        public setupValidation = (): void => {\n            if (this.errors !== null) return;\n            this.errors = ko.validation.group([\n            ]);\n            this.warnings = ko.validation.group([\n            ]);\n        }\n    \n        // Computed Observable for edit URL\n        public editUrl: KnockoutComputed<string> = ko.pureComputed(() => {\n            return this.coalesceConfig.baseViewUrl() + this.viewController + \"/CreateEdit?id=\" + this.serverId();\n        });\n\n        constructor(newItem?: object, parent?: Coalesce.BaseViewModel | ListViewModels.ServerList){\n            super(parent);\n            this.baseInitialize();\n            var self = this;\n            self.myId;\n\n            // Create computeds for display for objects\n\n    \n            // List Object model for LogEntries. Allows for loading subsets of data.\n            var _logEntriesList: ListViewModels.LogEntryList = null;\n            self.logEntriesList = function(loadImmediate = true) {\n                if (!_logEntriesList){\n                    _logEntriesList = new ListViewModels.LogEntryList();\n                    if (loadImmediate) loadLogEntriesList();\n                    self.serverId.subscribe(loadLogEntriesList)\n                }\n                return _logEntriesList;\n            }\n            function loadLogEntriesList() {\n                if (self.serverId()){\n                    _logEntriesList.queryString = \"filter.ServerId=\" + self.serverId();\n                    _logEntriesList.load();\n                }\n            }\n\n\n\n            // This stuff needs to be done after everything else is set up.\n            self.logFileLocation.subscribe(self.autoSave);\n            self.serverSearchString.subscribe(self.autoSave);\n            self.orderBy.subscribe(self.autoSave);\n        \n            if (newItem) {\n                self.loadFromDto(newItem, true);\n            }\n        }\n    }\n\n\n\n\n\n    export namespace Server {\n    }\n}","\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\n// Knockout List View Model for: Server\n// Generated by IntelliTect.Coalesce\n\nmodule ListViewModels {\n\n    export namespace ServerDataSources {\n        export class Default extends Coalesce.DataSource<ViewModels.Server> { }\n                \n        export class ServersWithoutChildren extends Coalesce.DataSource<ViewModels.Server> {\n        }\n    }\n\n    export class ServerList extends Coalesce.BaseListViewModel<ViewModels.Server> {\n        public readonly modelName: string = \"Server\";\n        public readonly apiController: string = \"/Server\";\n        public modelKeyName: string = \"serverId\";\n        public itemClass: new () => ViewModels.Server = ViewModels.Server;\n\n        public filter: {\n            serverId?:string;\r\n            logFileLocation?:string;\r\n            serverSearchString?:string;\r\n            orderBy?:string;\n        } = null;\n    \n        /** \n            The namespace containing all possible values of this.dataSource.\n        */\n        public dataSources: typeof ServerDataSources = ServerDataSources;\n\n        /**\n            The data source on the server to use when retrieving objects.\n            Valid values are in this.dataSources.\n        */\n        public dataSource: Coalesce.DataSource<ViewModels.Server> = new this.dataSources.Default();\n\n        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<ServerList, ViewModels.Server>(Coalesce.GlobalConfiguration.listViewModel);\n        public coalesceConfig: Coalesce.ListViewModelConfiguration<ServerList, ViewModels.Server>\n            = new Coalesce.ListViewModelConfiguration<ServerList, ViewModels.Server>(ServerList.coalesceConfig);\n\n\n        protected createItem = (newItem?: any, parent?: any) => new ViewModels.Server(newItem, parent);\n\n        constructor() {\n            super();\n        }\n    }\n}"]}
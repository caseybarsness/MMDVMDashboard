@using IntelliTect.Coalesce.TypeDefinition
@{
    ViewData["Title"] = "Talk Groups";
}

<div class="table-view">
    <div class="table-view-header">
        <div class="clearfix">
            <div style="display: inline-block; font-size: 1.1em; margin-right: 10px;">
                <i class="fa fa-arrow-circle-left" data-bind="enabled: previousPageEnabled() && !isLoading(), click: previousPage"></i>
                Page
                <input data-bind="value: page" style="width: 35px">
                of
                <span data-bind="text: pageCount"></span>
                <i class="fa fa-arrow-circle-right" data-bind="enabled: nextPageEnabled() && !isLoading(), click: nextPage"></i>
            </div>
            <select data-bind="value:pageSize" class="form-control" style="width: 100px; display: inline-block">
                <option value="1">1</option>
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="50">50</option>
                <option value="100">100</option>
                <option value="500">500</option>
                <option value="1000">1000</option>
            </select>
            <span class="label label-info" data-bind="fadeVisible: isLoading()">Loading...</span>
            <input class="form-control pull-right" style="width: 250px; margin-left: 20px" data-bind="textInput: search" placeholder="Search" />
            <div class="btn-group pull-right">
                <button data-bind="click:load" class="btn btn-sm btn-default "><i class="fa fa-refresh"></i> Refresh</button>
            </div>
        </div>
    </div>
    <hr />
    <table class="table table-striped table-bordered table-hover dataTable no-footer">
        <thead>
            <tr>
                <th class="sortable-header" data-bind="click: function(){orderByToggle('Name')}">
                    Name
                    <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'Name', 'fa-caret-down': orderByDescending() == 'Name'}"></i>
                </th>
                <th class="sortable-header" data-bind="click: function(){orderByToggle('Ts1Id')}">
                    TS1 ID
                    <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'Ts1Id', 'fa-caret-down': orderByDescending() == 'Ts1Id'}"></i>
                </th>
                <th class="sortable-header" data-bind="click: function(){orderByToggle('Ts2Id')}">
                    TS2 ID
                    <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'Ts2Id', 'fa-caret-down': orderByDescending() == 'Ts2Id'}"></i>
                </th>
            </tr>
        </thead>
        <tbody>
            <!-- ko foreach: items -->
            <tr data-bind="css: {'btn-warning': errorMessage()}, attr: {id: talkGroupId}">
                <td>@(Knockout.DisplayFor<MMDash.Data.Models.TalkGroup>(p => p.Name, true))</td>
                <td>@(Knockout.DisplayFor<MMDash.Data.Models.TalkGroup>(p => p.Ts1Id, true))</td>
                <td>@(Knockout.DisplayFor<MMDash.Data.Models.TalkGroup>(p => p.Ts2Id, true))</td>
            </tr>
            <!-- /ko -->
        </tbody>
    </table>
</div>
@section Scripts {
    <script src="~/js/tg.index.js" asp-append-version="true"></script>
    <script>
        @if (!ViewBag.Editable)
        {
            @:Coalesce.GlobalConfiguration.viewModel.setupValidationAutomatically(false);
        }
        var talkGroupList = new ListViewModels.TalkGroupList();

        // Set up parent info based on the URL.
        @if (ViewBag.Query != null)
        {
            @:talkGroupList.queryString = "@(ViewBag.Query)";
        }

        // Save and restore values from the URL:
        var urlVariables = ['page', 'pageSize', 'search', 'orderBy', 'orderByDescending'];
        $.each(urlVariables, function(){
            var param = Coalesce.Utilities.GetUrlParameter(this);
            if (param) {talkGroupList[this](param);}
        })
        talkGroupList.isLoading.subscribe(function(){
            var newUrl = window.location.href;

            $.each(urlVariables, function(){
                var param = talkGroupList[this]();
                newUrl = Coalesce.Utilities.SetUrlParameter(newUrl, this, param);
            })
            history.replaceState(null, document.title, newUrl);
        });

        talkGroupList.isSavingAutomatically = false;
        ko.applyBindings(talkGroupList);
        talkGroupList.isSavingAutomatically = true;

        talkGroupList.includes = "TalkGroupListGen";
        talkGroupList.load();

    </script>
}

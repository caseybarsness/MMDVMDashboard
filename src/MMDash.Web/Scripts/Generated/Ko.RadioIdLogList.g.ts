
/// <reference path="../coalesce.dependencies.d.ts" />

// Knockout List View Model for: RadioIdLog
// Generated by IntelliTect.Coalesce

module ListViewModels {

    export namespace RadioIdLogDataSources {
        export class Default extends Coalesce.DataSource<ViewModels.RadioIdLog> { }
            }

    export class RadioIdLogList extends Coalesce.BaseListViewModel<ViewModels.RadioIdLog> {
        public readonly modelName: string = "RadioIdLog";
        public readonly apiController: string = "/RadioIdLog";
        public modelKeyName: string = "radioIdLogId";
        public itemClass: new () => ViewModels.RadioIdLog = ViewModels.RadioIdLog;

        public filter: {
            radioIdLogId?:string;
            callSignId?:string;
            serverId?:string;
            radioId?:string;
        } = null;
    
        /** 
            The namespace containing all possible values of this.dataSource.
        */
        public dataSources: typeof RadioIdLogDataSources = RadioIdLogDataSources;

        /**
            The data source on the server to use when retrieving objects.
            Valid values are in this.dataSources.
        */
        public dataSource: Coalesce.DataSource<ViewModels.RadioIdLog> = new this.dataSources.Default();

        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<RadioIdLogList, ViewModels.RadioIdLog>(Coalesce.GlobalConfiguration.listViewModel);
        public coalesceConfig: Coalesce.ListViewModelConfiguration<RadioIdLogList, ViewModels.RadioIdLog>
            = new Coalesce.ListViewModelConfiguration<RadioIdLogList, ViewModels.RadioIdLog>(RadioIdLogList.coalesceConfig);


        protected createItem = (newItem?: any, parent?: any) => new ViewModels.RadioIdLog(newItem, parent);

        constructor() {
            super();
        }
    }
}
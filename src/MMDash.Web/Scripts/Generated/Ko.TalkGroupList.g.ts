
/// <reference path="../coalesce.dependencies.d.ts" />

// Knockout List View Model for: TalkGroup
// Generated by IntelliTect.Coalesce

module ListViewModels {

    export namespace TalkGroupDataSources {
        export class Default extends Coalesce.DataSource<ViewModels.TalkGroup> { }
            }

    export class TalkGroupList extends Coalesce.BaseListViewModel<ViewModels.TalkGroup> {
        public readonly modelName: string = "TalkGroup";
        public readonly apiController: string = "/TalkGroup";
        public modelKeyName: string = "talkGroupId";
        public itemClass: new () => ViewModels.TalkGroup = ViewModels.TalkGroup;

        public filter: {
            talkGroupId?:string;
            ts1Id?:string;
            ts2Id?:string;
            name?:string;
        } = null;
    
        /** 
            The namespace containing all possible values of this.dataSource.
        */
        public dataSources: typeof TalkGroupDataSources = TalkGroupDataSources;

        /**
            The data source on the server to use when retrieving objects.
            Valid values are in this.dataSources.
        */
        public dataSource: Coalesce.DataSource<ViewModels.TalkGroup> = new this.dataSources.Default();

        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<TalkGroupList, ViewModels.TalkGroup>(Coalesce.GlobalConfiguration.listViewModel);
        public coalesceConfig: Coalesce.ListViewModelConfiguration<TalkGroupList, ViewModels.TalkGroup>
            = new Coalesce.ListViewModelConfiguration<TalkGroupList, ViewModels.TalkGroup>(TalkGroupList.coalesceConfig);


        protected createItem = (newItem?: any, parent?: any) => new ViewModels.TalkGroup(newItem, parent);

        constructor() {
            super();
        }
    }
}

/// <reference path="../coalesce.dependencies.d.ts" />

// Knockout List View Model for: IpLog
// Generated by IntelliTect.Coalesce

module ListViewModels {

    export namespace IpLogDataSources {
        export class Default extends Coalesce.DataSource<ViewModels.IpLog> { }
                
        export class MappableIps extends Coalesce.DataSource<ViewModels.IpLog> {
        }
    }

    export class IpLogList extends Coalesce.BaseListViewModel<ViewModels.IpLog> {
        public readonly modelName: string = "IpLog";
        public readonly apiController: string = "/IpLog";
        public modelKeyName: string = "ipLogId";
        public itemClass: new () => ViewModels.IpLog = ViewModels.IpLog;

        public filter: {
            ipLogId?:string;
            radioIdLogId?:string;
            logDateTime?:string;
            ipAddress?:string;
            lat?:string;
            long?:string;
        } = null;
    
        /** 
            The namespace containing all possible values of this.dataSource.
        */
        public dataSources: typeof IpLogDataSources = IpLogDataSources;

        /**
            The data source on the server to use when retrieving objects.
            Valid values are in this.dataSources.
        */
        public dataSource: Coalesce.DataSource<ViewModels.IpLog> = new this.dataSources.Default();

        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<IpLogList, ViewModels.IpLog>(Coalesce.GlobalConfiguration.listViewModel);
        public coalesceConfig: Coalesce.ListViewModelConfiguration<IpLogList, ViewModels.IpLog>
            = new Coalesce.ListViewModelConfiguration<IpLogList, ViewModels.IpLog>(IpLogList.coalesceConfig);


        protected createItem = (newItem?: any, parent?: any) => new ViewModels.IpLog(newItem, parent);

        constructor() {
            super();
        }
    }
}